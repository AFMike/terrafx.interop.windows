@../../settings.rsp
@../../remap.rsp
--exclude
ALL_POWERSCHEMES_GUID
CUSTOM_SYSTEM_EVENT_TRIGGER_INIT(PCUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG, PCWSTR):void
EXCEPTION_ROUTINE
GetCurrentFiber():PVOID
GetFiberData():PVOID
GUID_ACDC_POWER_SOURCE
GUID_ACTIVE_POWERSCHEME
GUID_ADAPTIVE_INPUT_CONTROLLER_STATE
GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP
GUID_ADVANCED_COLOR_QUALITY_BIAS
GUID_ALLOW_AWAYMODE
GUID_ALLOW_DISPLAY_REQUIRED
GUID_ALLOW_RTC_WAKE
GUID_ALLOW_STANDBY_STATES
GUID_ALLOW_SYSTEM_REQUIRED
GUID_APPLAUNCH_BUTTON
GUID_BACKGROUND_TASK_NOTIFICATION
GUID_BATTERY_COUNT
GUID_BATTERY_DISCHARGE_ACTION_0
GUID_BATTERY_DISCHARGE_ACTION_1
GUID_BATTERY_DISCHARGE_ACTION_2
GUID_BATTERY_DISCHARGE_ACTION_3
GUID_BATTERY_DISCHARGE_FLAGS_0
GUID_BATTERY_DISCHARGE_FLAGS_1
GUID_BATTERY_DISCHARGE_FLAGS_2
GUID_BATTERY_DISCHARGE_FLAGS_3
GUID_BATTERY_DISCHARGE_LEVEL_0
GUID_BATTERY_DISCHARGE_LEVEL_1
GUID_BATTERY_DISCHARGE_LEVEL_2
GUID_BATTERY_DISCHARGE_LEVEL_3
GUID_BATTERY_PERCENTAGE_REMAINING
GUID_BATTERY_SUBGROUP
GUID_CONNECTIVITY_IN_STANDBY
GUID_CONSOLE_DISPLAY_STATE
GUID_CRITICAL_POWER_TRANSITION
GUID_DEEP_SLEEP_ENABLED
GUID_DEEP_SLEEP_PLATFORM_STATE
GUID_DEVICE_IDLE_POLICY
GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS
GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS
GUID_DISCONNECTED_STANDBY_MODE
GUID_DISK_ADAPTIVE_POWERDOWN
GUID_DISK_BURST_IGNORE_THRESHOLD
GUID_DISK_COALESCING_POWERDOWN_TIMEOUT
GUID_DISK_IDLE_TIMEOUT
GUID_DISK_MAX_POWER
GUID_DISK_NVME_NOPPME
GUID_DISK_POWERDOWN_TIMEOUT
GUID_DISK_SUBGROUP
GUID_ENABLE_SWITCH_FORCED_SHUTDOWN
GUID_ENERGY_SAVER_BATTERY_THRESHOLD
GUID_ENERGY_SAVER_BRIGHTNESS
GUID_ENERGY_SAVER_POLICY
GUID_ENERGY_SAVER_SUBGROUP
GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT
GUID_GLOBAL_USER_PRESENCE
GUID_GPU_PREFERENCE_POLICY
GUID_GRAPHICS_SUBGROUP
GUID_HIBERNATE_FASTS4_POLICY
GUID_HIBERNATE_TIMEOUT
GUID_IDLE_BACKGROUND_TASK
GUID_IDLE_RESILIENCY_PERIOD
GUID_IDLE_RESILIENCY_SUBGROUP
GUID_INTSTEER_LOAD_PER_PROC_TRIGGER
GUID_INTSTEER_MODE
GUID_INTSTEER_SUBGROUP
GUID_INTSTEER_TIME_UNPARK_TRIGGER
GUID_LEGACY_RTC_MITIGATION
GUID_LIDCLOSE_ACTION
GUID_LIDOPEN_POWERSTATE
GUID_LIDSWITCH_STATE_CHANGE
GUID_LOCK_CONSOLE_ON_WAKE
GUID_MAX_POWER_SAVINGS
GUID_MIN_POWER_SAVINGS
GUID_MIXED_REALITY_MODE
GUID_MONITOR_POWER_ON
GUID_NON_ADAPTIVE_INPUT_TIMEOUT
GUID_PCIEXPRESS_ASPM_POLICY
GUID_PCIEXPRESS_SETTINGS_SUBGROUP
GUID_POWERBUTTON_ACTION
GUID_POWERSCHEME_PERSONALITY
GUID_POWER_SAVING_STATUS
GUID_PROCESSOR_ALLOW_THROTTLING
GUID_PROCESSOR_CLASS0_FLOOR_PERF
GUID_PROCESSOR_CLASS1_INITIAL_PERF
GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR
GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD
GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING
GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY
GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD
GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME
GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY
GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD
GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME
GUID_PROCESSOR_CORE_PARKING_MAX_CORES
GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1
GUID_PROCESSOR_CORE_PARKING_MIN_CORES
GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1
GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR
GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD
GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD
GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING
GUID_PROCESSOR_DISTRIBUTE_UTILITY
GUID_PROCESSOR_DUTY_CYCLING
GUID_PROCESSOR_FREQUENCY_LIMIT
GUID_PROCESSOR_FREQUENCY_LIMIT_1
GUID_PROCESSOR_HETEROGENEOUS_POLICY
GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD
GUID_PROCESSOR_HETERO_DECREASE_TIME
GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD
GUID_PROCESSOR_HETERO_INCREASE_TIME
GUID_PROCESSOR_IDLESTATE_POLICY
GUID_PROCESSOR_IDLE_ALLOW_SCALING
GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD
GUID_PROCESSOR_IDLE_DISABLE
GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD
GUID_PROCESSOR_IDLE_STATE_MAXIMUM
GUID_PROCESSOR_IDLE_TIME_CHECK
GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK
GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1
GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD
GUID_PROCESSOR_PARKING_CORE_OVERRIDE
GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD
GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD
GUID_PROCESSOR_PARKING_PERF_STATE
GUID_PROCESSOR_PARKING_PERF_STATE_1
GUID_PROCESSOR_PERFSTATE_POLICY
GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW
GUID_PROCESSOR_PERF_AUTONOMOUS_MODE
GUID_PROCESSOR_PERF_BOOST_MODE
GUID_PROCESSOR_PERF_BOOST_POLICY
GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY
GUID_PROCESSOR_PERF_DECREASE_HISTORY
GUID_PROCESSOR_PERF_DECREASE_POLICY
GUID_PROCESSOR_PERF_DECREASE_POLICY_1
GUID_PROCESSOR_PERF_DECREASE_THRESHOLD
GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1
GUID_PROCESSOR_PERF_DECREASE_TIME
GUID_PROCESSOR_PERF_DECREASE_TIME_1
GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE
GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1
GUID_PROCESSOR_PERF_HISTORY
GUID_PROCESSOR_PERF_HISTORY_1
GUID_PROCESSOR_PERF_INCREASE_HISTORY
GUID_PROCESSOR_PERF_INCREASE_POLICY
GUID_PROCESSOR_PERF_INCREASE_POLICY_1
GUID_PROCESSOR_PERF_INCREASE_THRESHOLD
GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1
GUID_PROCESSOR_PERF_INCREASE_TIME
GUID_PROCESSOR_PERF_INCREASE_TIME_1
GUID_PROCESSOR_PERF_LATENCY_HINT
GUID_PROCESSOR_PERF_LATENCY_HINT_PERF
GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1
GUID_PROCESSOR_PERF_TIME_CHECK
GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD
GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1
GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME
GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1
GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD
GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1
GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME
GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1
GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING
GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1
GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR
GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1
GUID_PROCESSOR_SETTINGS_SUBGROUP
GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY
GUID_PROCESSOR_SOFT_PARKING_LATENCY
GUID_PROCESSOR_THREAD_SCHEDULING_POLICY
GUID_PROCESSOR_THROTTLE_MAXIMUM
GUID_PROCESSOR_THROTTLE_MAXIMUM_1
GUID_PROCESSOR_THROTTLE_MINIMUM
GUID_PROCESSOR_THROTTLE_MINIMUM_1
GUID_PROCESSOR_THROTTLE_POLICY
GUID_SESSION_DISPLAY_STATUS
GUID_SESSION_USER_PRESENCE
GUID_SLEEPBUTTON_ACTION
GUID_SLEEP_IDLE_THRESHOLD
GUID_SLEEP_SUBGROUP
GUID_SPR_ACTIVE_SESSION_CHANGE
GUID_STANDBY_BUDGET_GRACE_PERIOD
GUID_STANDBY_BUDGET_PERCENT
GUID_STANDBY_RESERVE_GRACE_PERIOD
GUID_STANDBY_RESERVE_TIME
GUID_STANDBY_RESET_PERCENT
GUID_STANDBY_TIMEOUT
GUID_SYSTEM_AWAYMODE
GUID_SYSTEM_BUTTON_SUBGROUP
GUID_SYSTEM_COOLING_POLICY
GUID_TYPICAL_POWER_SAVINGS
GUID_UNATTEND_SLEEP_TIMEOUT
GUID_USERINTERFACEBUTTON_ACTION
GUID_USER_PRESENCE_PREDICTION
GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS
GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE
GUID_VIDEO_ADAPTIVE_POWERDOWN
GUID_VIDEO_ANNOYANCE_TIMEOUT
GUID_VIDEO_CONSOLE_LOCK_TIMEOUT
GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS
GUID_VIDEO_DIM_TIMEOUT
GUID_VIDEO_POWERDOWN_TIMEOUT
GUID_VIDEO_SUBGROUP
Int64ShllMod32(ULONGLONG, DWORD):ULONGLONG
Int64ShraMod32(LONGLONG, DWORD):LONGLONG
Int64ShrlMod32(ULONGLONG, DWORD):ULONGLONG
MemoryBarrier():void
NO_SUBGROUP_GUID
NtCurrentTeb():struct _TEB *
operator&(JOB_OBJECT_IO_RATE_CONTROL_FLAGS, JOB_OBJECT_IO_RATE_CONTROL_FLAGS):JOB_OBJECT_IO_RATE_CONTROL_FLAGS
operator&(JOB_OBJECT_NET_RATE_CONTROL_FLAGS, JOB_OBJECT_NET_RATE_CONTROL_FLAGS):JOB_OBJECT_NET_RATE_CONTROL_FLAGS
operator&=(JOB_OBJECT_IO_RATE_CONTROL_FLAGS &, JOB_OBJECT_IO_RATE_CONTROL_FLAGS):JOB_OBJECT_IO_RATE_CONTROL_FLAGS &
operator&=(JOB_OBJECT_NET_RATE_CONTROL_FLAGS &, JOB_OBJECT_NET_RATE_CONTROL_FLAGS):JOB_OBJECT_NET_RATE_CONTROL_FLAGS &
operator^(JOB_OBJECT_IO_RATE_CONTROL_FLAGS, JOB_OBJECT_IO_RATE_CONTROL_FLAGS):JOB_OBJECT_IO_RATE_CONTROL_FLAGS
operator^(JOB_OBJECT_NET_RATE_CONTROL_FLAGS, JOB_OBJECT_NET_RATE_CONTROL_FLAGS):JOB_OBJECT_NET_RATE_CONTROL_FLAGS
operator^=(JOB_OBJECT_IO_RATE_CONTROL_FLAGS &, JOB_OBJECT_IO_RATE_CONTROL_FLAGS):JOB_OBJECT_IO_RATE_CONTROL_FLAGS &
operator^=(JOB_OBJECT_NET_RATE_CONTROL_FLAGS &, JOB_OBJECT_NET_RATE_CONTROL_FLAGS):JOB_OBJECT_NET_RATE_CONTROL_FLAGS &
operator|(JOB_OBJECT_IO_RATE_CONTROL_FLAGS, JOB_OBJECT_IO_RATE_CONTROL_FLAGS):JOB_OBJECT_IO_RATE_CONTROL_FLAGS
operator|(JOB_OBJECT_NET_RATE_CONTROL_FLAGS, JOB_OBJECT_NET_RATE_CONTROL_FLAGS):JOB_OBJECT_NET_RATE_CONTROL_FLAGS
operator|=(JOB_OBJECT_IO_RATE_CONTROL_FLAGS &, JOB_OBJECT_IO_RATE_CONTROL_FLAGS):JOB_OBJECT_IO_RATE_CONTROL_FLAGS &
operator|=(JOB_OBJECT_NET_RATE_CONTROL_FLAGS &, JOB_OBJECT_NET_RATE_CONTROL_FLAGS):JOB_OBJECT_NET_RATE_CONTROL_FLAGS &
operator~(JOB_OBJECT_IO_RATE_CONTROL_FLAGS):JOB_OBJECT_IO_RATE_CONTROL_FLAGS
operator~(JOB_OBJECT_NET_RATE_CONTROL_FLAGS):JOB_OBJECT_NET_RATE_CONTROL_FLAGS
PEXCEPTION_ROUTINE
PPM_IDLESTATES_DATA_GUID
PPM_IDLESTATE_CHANGE_GUID
PPM_IDLE_ACCOUNTING_EX_GUID
PPM_IDLE_ACCOUNTING_GUID
PPM_PERFMON_PERFSTATE_GUID
PPM_PERFSTATES_DATA_GUID
PPM_PERFSTATE_CHANGE_GUID
PPM_PERFSTATE_DOMAIN_CHANGE_GUID
PPM_THERMALCONSTRAINT_GUID
PPM_THERMAL_POLICY_CHANGE_GUID
ReadAcquire(const volatile LONG *):LONG
ReadAcquire8(const volatile CHAR *):CHAR
ReadAcquire16(const volatile SHORT *):SHORT
ReadAcquire64(const volatile LONG64 *):LONG64
ReadBooleanAcquire(const volatile BOOLEAN *):BYTE
ReadBooleanNoFence(const volatile BOOLEAN *):BYTE
ReadNoFence(const volatile LONG *):LONG
ReadNoFence8(const volatile CHAR *):CHAR
ReadNoFence16(const volatile SHORT *):SHORT
ReadNoFence64(const volatile LONG64 *):LONG64
ReadPointerAcquire(const volatile PVOID *):PVOID
ReadPointerNoFence(const volatile PVOID *):PVOID
ReadPointerRaw(const volatile PVOID *):PVOID
ReadRaw(const volatile LONG *):LONG
ReadRaw8(const volatile CHAR *):CHAR
ReadRaw16(const volatile SHORT *):SHORT
ReadRaw64(const volatile LONG64 *):LONG64
ReadUCharAcquire(const volatile BYTE *):BYTE
ReadUCharNoFence(const volatile BYTE *):BYTE
ReadUCharRaw(const volatile BYTE *):BYTE
ReadULong64Acquire(const volatile DWORD64 *):DWORD64
ReadULong64NoFence(const volatile DWORD64 *):DWORD64
ReadULong64Raw(const volatile DWORD64 *):DWORD64
ReadULongAcquire(const volatile DWORD *):DWORD
ReadULongNoFence(const volatile DWORD *):DWORD
ReadULongRaw(const volatile DWORD *):DWORD
ReadUShortAcquire(const volatile WORD *):WORD
ReadUShortNoFence(const volatile WORD *):WORD
ReadUShortRaw(const volatile WORD *):WORD
RtlCaptureContext(PCONTEXT):void
RtlCaptureStackBackTrace(DWORD, DWORD, PVOID *, PDWORD):WORD
RtlCompareMemory(const void *, const void *, SIZE_T):SIZE_T
RtlConvertDeviceFamilyInfoToString(PDWORD, PDWORD, PWSTR, PWSTR):DWORD
RtlCrc32(const void *, size_t, DWORD):DWORD
RtlCrc64(const void *, size_t, ULONGLONG):ULONGLONG
RtlExtendCorrelationVector(PCORRELATION_VECTOR):DWORD
RtlFirstEntrySList(const SLIST_HEADER *):PSLIST_ENTRY
RtlGetDeviceFamilyInfoEnum(ULONGLONG *, DWORD *, DWORD *):void
RtlGetProductInfo(DWORD, DWORD, DWORD, DWORD, PDWORD):BOOLEAN
RtlGetReturnAddressHijackTarget():ULONG_PTR
RtlIncrementCorrelationVector(PCORRELATION_VECTOR):DWORD
RtlInitializeCorrelationVector(PCORRELATION_VECTOR, int, const GUID *):DWORD
RtlInitializeSListHead(PSLIST_HEADER):void
RtlInterlockedFlushSList(PSLIST_HEADER):PSLIST_ENTRY
RtlInterlockedPopEntrySList(PSLIST_HEADER):PSLIST_ENTRY
RtlInterlockedPushEntrySList(PSLIST_HEADER, PSLIST_ENTRY):PSLIST_ENTRY
RtlInterlockedPushListSListEx(PSLIST_HEADER, PSLIST_ENTRY, PSLIST_ENTRY, DWORD):PSLIST_ENTRY
RtlIsZeroMemory(PVOID, SIZE_T):BOOLEAN
RtlNormalizeSecurityDescriptor(PSECURITY_DESCRIPTOR *, DWORD, PSECURITY_DESCRIPTOR *, PDWORD, BOOLEAN):BOOLEAN
RtlOsDeploymentState(DWORD):OS_DEPLOYEMENT_STATE_VALUES
RtlPcToFileHeader(PVOID, PVOID *):PVOID
RtlpNumberOf<T, N>(T (&)[N]):char (*)[N]
RtlQueryDepthSList(PSLIST_HEADER):WORD
RtlRaiseCustomSystemEventTrigger(PCUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG):DWORD
RtlRaiseException(PEXCEPTION_RECORD):void
RtlSecureZeroMemory(PVOID, SIZE_T):PVOID
RtlSwitchedVVI(PRTL_OSVERSIONINFOEXW, DWORD, ULONGLONG):DWORD
RtlUnwind(PVOID, PVOID, PEXCEPTION_RECORD, PVOID):void
RtlValidateCorrelationVector(PCORRELATION_VECTOR):DWORD
TpDestroyCallbackEnviron(PTP_CALLBACK_ENVIRON):void
TpInitializeCallbackEnviron(PTP_CALLBACK_ENVIRON):void
TpSetCallbackActivationContext(PTP_CALLBACK_ENVIRON, struct _ACTIVATION_CONTEXT *):void
TpSetCallbackCleanupGroup(PTP_CALLBACK_ENVIRON, PTP_CLEANUP_GROUP, PTP_CLEANUP_GROUP_CANCEL_CALLBACK):void
TpSetCallbackFinalizationCallback(PTP_CALLBACK_ENVIRON, PTP_SIMPLE_CALLBACK):void
TpSetCallbackLongFunction(PTP_CALLBACK_ENVIRON):void
TpSetCallbackNoActivationContext(PTP_CALLBACK_ENVIRON):void
TpSetCallbackPersistent(PTP_CALLBACK_ENVIRON):void
TpSetCallbackPriority(PTP_CALLBACK_ENVIRON, TP_CALLBACK_PRIORITY):void
TpSetCallbackRaceWithDll(PTP_CALLBACK_ENVIRON, PVOID):void
TpSetCallbackThreadpool(PTP_CALLBACK_ENVIRON, PTP_POOL):void
VerSetConditionMask(ULONGLONG, DWORD, BYTE):ULONGLONG
WriteBooleanNoFence(volatile BOOLEAN *, BOOLEAN):void
WriteBooleanRelease(volatile BOOLEAN *, BOOLEAN):void
WriteNoFence(volatile LONG *, LONG):void
WriteNoFence8(volatile CHAR *, CHAR):void
WriteNoFence16(volatile SHORT *, SHORT):void
WriteNoFence64(volatile LONG64 *, LONG64):void
WritePointerNoFence(volatile PVOID *, PVOID):void
WritePointerRaw(volatile PVOID *, PVOID):void
WritePointerRelease(volatile PVOID *, PVOID):void
WriteRaw(volatile LONG *, LONG):void
WriteRaw8(volatile CHAR *, CHAR):void
WriteRaw16(volatile SHORT *, SHORT):void
WriteRaw64(volatile LONG64 *, LONG64):void
WriteRelease(volatile LONG *, LONG):void
WriteRelease8(volatile CHAR *, CHAR):void
WriteRelease16(volatile SHORT *, SHORT):void
WriteRelease64(volatile LONG64 *, LONG64):void
WriteUCharNoFence(volatile BYTE *, BYTE):void
WriteUCharRaw(volatile BYTE *, BYTE):void
WriteUCharRelease(volatile BYTE *, BYTE):void
WriteULong64NoFence(volatile DWORD64 *, DWORD64):void
WriteULong64Raw(volatile DWORD64 *, DWORD64):void
WriteULong64Release(volatile DWORD64 *, DWORD64):void
WriteULongNoFence(volatile DWORD *, DWORD):void
WriteULongRaw(volatile DWORD *, DWORD):void
WriteULongRelease(volatile DWORD *, DWORD):void
WriteUShortNoFence(volatile WORD *, WORD):void
WriteUShortRaw(volatile WORD *, WORD):void
WriteUShortRelease(volatile WORD *, WORD):void
_ACTIVATION_CONTEXT
_BitScanForward(DWORD *, DWORD):BOOLEAN
_BitScanReverse(DWORD *, DWORD):BOOLEAN
_bittest(const LONG *, LONG):BOOLEAN
_bittestandcomplement(LONG *, LONG):BOOLEAN
_bittestandreset(LONG *, LONG):BOOLEAN
_bittestandset(LONG *, LONG):BOOLEAN
_ENUM_FLAG_INTEGER_FOR_SIZE<S>
_ENUM_FLAG_INTEGER_FOR_SIZE<?>
_ENUM_FLAG_SIZED_INTEGER<T>
_EXCEPTION_REGISTRATION_RECORD
_ImageArchitectureHeader
_InlineBitScanForward64(DWORD *, DWORD64):BOOLEAN
_InlineBitScanReverse64(DWORD *, DWORD64):BOOLEAN
_InlineInterlockedAdd(volatile LONG *, LONG):LONG
_InlineInterlockedAdd64(volatile LONG64 *, LONG64):LONG64
_InlineInterlockedAnd64(volatile LONG64 *, LONG64):LONG64
_InlineInterlockedCompareExchangePointer(volatile PVOID *, PVOID, PVOID):PVOID
_InlineInterlockedDecrement64(volatile LONGLONG *):LONGLONG
_InlineInterlockedExchange64(volatile LONGLONG *, LONGLONG):LONGLONG
_InlineInterlockedExchangeAdd64(volatile LONGLONG *, LONGLONG):LONGLONG
_InlineInterlockedExchangePointer(volatile PVOID *, PVOID):PVOID
_InlineInterlockedIncrement64(volatile LONGLONG *):LONGLONG
_InlineInterlockedOr64(volatile LONGLONG *, LONGLONG):LONGLONG
_InlineInterlockedXor64(volatile LONG64 *, LONG64):LONG64
_InterlockedAnd(volatile LONG *, LONG):LONG
_InterlockedAnd8(volatile char *, char):char
_InterlockedAnd16(volatile SHORT *, SHORT):SHORT
_interlockedbittestandreset(volatile LONG *, LONG):BOOLEAN
_interlockedbittestandset(volatile LONG *, LONG):BOOLEAN
_InterlockedCompareExchange(volatile LONG *, LONG, LONG):LONG
_InterlockedCompareExchange16(volatile SHORT *, SHORT, SHORT):SHORT
_InterlockedCompareExchange64(volatile LONG64 *, LONG64, LONG64):LONG64
_InterlockedDecrement(volatile LONG *):LONG
_InterlockedDecrement16(volatile SHORT *):SHORT
_InterlockedExchange(volatile LONG *, LONG):LONG
_InterlockedExchange8(volatile CHAR *, CHAR):CHAR
_InterlockedExchange16(volatile SHORT *, SHORT):SHORT
_InterlockedExchangeAdd(volatile LONG *, LONG):LONG
_InterlockedExchangeAdd8(volatile char *, char):char
_InterlockedIncrement(volatile LONG *):LONG
_InterlockedIncrement16(volatile SHORT *):SHORT
_InterlockedOr(volatile LONG *, LONG):LONG
_InterlockedOr8(volatile char *, char):char
_InterlockedOr16(volatile SHORT *, SHORT):SHORT
_InterlockedXor(volatile LONG *, LONG):LONG
_InterlockedXor8(volatile char *, char):char
_InterlockedXor16(volatile SHORT *, SHORT):SHORT
_mm_pause():void
_mm_prefetch(const CHAR *, int):void
_NT_TIB
_rotl(unsigned int, int):unsigned int
_rotl64(unsigned long long, int):unsigned long long
_rotr(unsigned int, int):unsigned int
_rotr64(unsigned long long, int):unsigned long long
_TEB
_TP_CALLBACK_INSTANCE
_TP_CLEANUP_GROUP
_TP_IO
_TP_POOL
_TP_TIMER
_TP_WAIT
_TP_WORK
__addfsbyte(DWORD, BYTE):void
__addfsdword(DWORD, DWORD):void
__addfsword(DWORD, WORD):void
__cpuidex(int [4], int, int):void
__fastfail(unsigned int):void
__incfsbyte(DWORD):void
__incfsdword(DWORD):void
__incfsword(DWORD):void
__int2c():void
__rdtsc():DWORD64
__readfsbyte(DWORD):BYTE
__readfsdword(DWORD):DWORD
__readfsword(DWORD):WORD
__readpmc(DWORD):DWORD64
__writefsbyte(DWORD, BYTE):void
__writefsdword(DWORD, DWORD):void
__writefsword(DWORD, WORD):void
--file
um-winnt.h
--output
../../../sources/Interop/Windows/um/winnt
--test-output
../../../tests/Interop/Windows/um/winnt
--traverse
C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/winnt.h
--with-attribute
ACCESS_REASON_TYPE=Flags
CM_SERVICE_NODE_TYPE=Flags
JOB_OBJECT_IO_RATE_CONTROL_FLAGS=Flags
JOB_OBJECT_NET_RATE_CONTROL_FLAGS=Flags
JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS=Flags
ReplacesCorHdrNumericDefines=Flags
--with-librarypath
*=kernel32
RtlAddGrowableFunctionTable=ntdll
RtlCaptureStackBackTrace=ntdll
RtlDeleteGrowableFunctionTable=ntdll
RtlFirstEntrySList=ntdll
RtlGrowFunctionTable=ntdll
RtlInitializeSListHead=ntdll
RtlInterlockedFlushSList=ntdll
RtlInterlockedPopEntrySList=ntdll
RtlInterlockedPushEntrySList=ntdll
RtlQueryDepthSList=ntdll
