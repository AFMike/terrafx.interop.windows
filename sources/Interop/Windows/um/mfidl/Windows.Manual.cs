// Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.

// Ported from um/mfidl.h in the Windows SDK for Windows 10.0.19041.0
// Original source is Copyright © Microsoft. All rights reserved.

using System;

namespace TerraFX.Interop
{
    public static unsafe partial class Windows
    {
        public const int MEDIASINK_FIXED_STREAMS = 0x00000001;

        public const int MEDIASINK_CANNOT_MATCH_CLOCK = 0x00000002;

        public const int MEDIASINK_RATELESS = 0x00000004;

        public const int MEDIASINK_CLOCK_REQUIRED = 0x00000008;

        public const int MEDIASINK_CAN_PREROLL = 0x00000010;

        public const int MEDIASINK_REQUIRE_REFERENCE_MEDIATYPE = 0x00000020;

        public const int MFCLOCK_FREQUENCY_HNS = 10000000;

        public const int MFCLOCK_TOLERANCE_UNKNOWN = 50000;

        public const int MFCLOCK_JITTER_ISR = 1000;

        public const int MFCLOCK_JITTER_DPC = 4000;

        public const int MFCLOCK_JITTER_PASSIVE = 10000;

        public const long PRESENTATION_CURRENT_POSITION = 0x7FFFFFFFFFFFFFFF;

        public const int MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_CROSSPROCESS = 0x00000001;

        public const int MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_NOPERSIST = 0x00000002;

        public const int MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_DONT_ALLOW_FORMAT_CHANGES = 0x00000004;

        public const int MFRR_INFO_VERSION = 0;

        public const int MF_USER_MODE_COMPONENT_LOAD = 0x00000001;

        public const int MF_KERNEL_MODE_COMPONENT_LOAD = 0x00000002;

        public const int MF_GRL_LOAD_FAILED = 0x00000010;

        public const int MF_INVALID_GRL_SIGNATURE = 0x00000020;

        public const int MF_GRL_ABSENT = 0x00001000;

        public const int MF_COMPONENT_REVOKED = 0x00002000;

        public const int MF_COMPONENT_INVALID_EKU = 0x00004000;

        public const int MF_COMPONENT_CERT_REVOKED = 0x00008000;

        public const int MF_COMPONENT_INVALID_ROOT = 0x00010000;

        public const int MF_COMPONENT_HS_CERT_REVOKED = 0x00020000;

        public const int MF_COMPONENT_LS_CERT_REVOKED = 0x00040000;

        public const int MF_BOOT_DRIVER_VERIFICATION_FAILED = 0x00100000;

        public const int MF_TEST_SIGNED_COMPONENT_LOADING = 0x01000000;

        public const int MF_MINCRYPT_FAILURE = 0x10000000;

        public const int SHA_HASH_LEN = 20;

        public const int STR_HASH_LEN = (SHA_HASH_LEN * 2 + 3);

        public const uint MFOUTPUTATTRIBUTE_DIGITAL = 0x00000001;

        public const uint MFOUTPUTATTRIBUTE_NONSTANDARDIMPLEMENTATION = 0x00000002;

        public const uint MFOUTPUTATTRIBUTE_VIDEO = 0x00000004;

        public const uint MFOUTPUTATTRIBUTE_COMPRESSED = 0x00000008;

        public const uint MFOUTPUTATTRIBUTE_SOFTWARE = 0x00000010;

        public const uint MFOUTPUTATTRIBUTE_BUS = 0x00000020;

        public const uint MFOUTPUTATTRIBUTE_BUSIMPLEMENTATION = 0x0000FF00;

        public const int MFCONTENTPROTECTIONDEVICE_FUNCTIONID_START = 0x04000000;

        public const int MFCONTENTPROTECTIONDEVICE_REALTIMECLIENT_DATA_FUNCTIONID = MFCONTENTPROTECTIONDEVICE_FUNCTIONID_START;

        public const int MF_UNKNOWN_DURATION = 0;

        public const int MF_RESOLUTION_MEDIASOURCE = 0x1;

        public const int MF_RESOLUTION_BYTESTREAM = 0x2;

        public const int MF_RESOLUTION_CONTENT_DOES_NOT_HAVE_TO_MATCH_EXTENSION_OR_MIME_TYPE = 0x10;

        public const int MF_RESOLUTION_KEEP_BYTE_STREAM_ALIVE_ON_FAIL = 0x20;

        public const int MF_RESOLUTION_DISABLE_LOCAL_PLUGINS = 0x40;

        public const int MF_RESOLUTION_PLUGIN_CONTROL_POLICY_APPROVED_ONLY = 0x80;

        public const int MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY = 0x100;

        public const int MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY_EDGEMODE = 0x200;

        public const int MF_RESOLUTION_ENABLE_STORE_PLUGINS = 0x400;

        public const int MF_RESOLUTION_READ = 0x10000;

        public const int MF_RESOLUTION_WRITE = 0x20000;

        public const int MF_ACTIVATE_CUSTOM_MIXER_ALLOWFAIL = 0x1;

        public const int MF_ACTIVATE_CUSTOM_PRESENTER_ALLOWFAIL = 0x1;

        public static readonly Guid MF_WVC1_PROG_SINGLE_SLICE_CONTENT = new Guid(0x67EC2559, 0x0F2F, 0x4420, 0xA4, 0xDD, 0x2F, 0x8E, 0xE7, 0xA5, 0x73, 0x8B);

        public static readonly Guid MF_PROGRESSIVE_CODING_CONTENT = new Guid(0x8F020EEA, 0x1508, 0x471F, 0x9D, 0xA6, 0x50, 0x7D, 0x7C, 0xFA, 0x40, 0xDB);

        public static readonly Guid MF_NALU_LENGTH_SET = new Guid(0xA7911D53, 0x12A4, 0x4965, 0xAE, 0x70, 0x6E, 0xAD, 0xD6, 0xFF, 0x05, 0x51);

        public static readonly Guid MF_NALU_LENGTH_INFORMATION = new Guid(0x19124E7C, 0xAD4B, 0x465F, 0xBB, 0x18, 0x20, 0x18, 0x62, 0x87, 0xB6, 0xAF);

        public static readonly Guid MF_USER_DATA_PAYLOAD = new Guid(0xD1D4985D, 0xDC92, 0x457A, 0xB3, 0xA0, 0x65, 0x1A, 0x33, 0xA3, 0x10, 0x47);

        public static readonly Guid MF_MPEG4SINK_SPSPPS_PASSTHROUGH = new Guid(0x5601A134, 0x2005, 0x4AD2, 0xB3, 0x7D, 0x22, 0xA6, 0xC5, 0x54, 0xDE, 0xB2);

        public static readonly Guid MF_MPEG4SINK_MOOV_BEFORE_MDAT = new Guid(0xF672E3AC, 0xE1E6, 0x4F10, 0xB5, 0xEC, 0x5F, 0x3B, 0x30, 0x82, 0x88, 0x16);

        public static readonly Guid MF_MPEG4SINK_MINIMUM_PROPERTIES_SIZE = new Guid(0xDCA1ED52, 0x450E, 0x4A22, 0x8C, 0x62, 0x4E, 0xD4, 0x52, 0xF7, 0xA1, 0x87);

        public static readonly Guid MF_MPEG4SINK_MIN_FRAGMENT_DURATION = new Guid(0xA30B570C, 0x8EFD, 0x45E8, 0x94, 0xFE, 0x27, 0xC8, 0x4B, 0x5B, 0xDF, 0xF6);

        public static readonly Guid MF_MPEG4SINK_MAX_CODED_SEQUENCES_PER_FRAGMENT = new Guid(0xFC1B3BD6, 0x692D, 0x4CE5, 0x92, 0x99, 0x73, 0x8A, 0xA5, 0x46, 0x3E, 0x9A);

        public static readonly Guid IID_IMFMediaSession = new Guid(0x90377834, 0x21D0, 0x4DEE, 0x82, 0x14, 0xBA, 0x2E, 0x3E, 0x6C, 0x11, 0x27);

        public static readonly Guid MF_SESSION_TOPOLOADER = new Guid(0x1E83D482, 0x1F1C, 0x4571, 0x84, 0x5, 0x88, 0xF4, 0xB2, 0x18, 0x1F, 0x71);

        public static readonly Guid MF_SESSION_GLOBAL_TIME = new Guid(0x1E83D482, 0x1F1C, 0x4571, 0x84, 0x5, 0x88, 0xF4, 0xB2, 0x18, 0x1F, 0x72);

        public static readonly Guid MF_SESSION_QUALITY_MANAGER = new Guid(0x1E83D482, 0x1F1C, 0x4571, 0x84, 0x5, 0x88, 0xF4, 0xB2, 0x18, 0x1F, 0x73);

        public static readonly Guid MF_SESSION_CONTENT_PROTECTION_MANAGER = new Guid(0x1E83D482, 0x1F1C, 0x4571, 0x84, 0x5, 0x88, 0xF4, 0xB2, 0x18, 0x1F, 0x74);

        public static readonly Guid MF_SESSION_SERVER_CONTEXT = new Guid(0xAFE5B291, 0x50FA, 0x46E8, 0xB9, 0xBE, 0xC, 0xC, 0x3C, 0xE4, 0xB3, 0xA5);

        public static readonly Guid MF_SESSION_REMOTE_SOURCE_MODE = new Guid(0xF4033EF4, 0x9BB3, 0x4378, 0x94, 0x1F, 0x85, 0xA0, 0x85, 0x6B, 0xC2, 0x44);

        public static readonly Guid MF_SESSION_APPROX_EVENT_OCCURRENCE_TIME = new Guid(0x190E852F, 0x6238, 0x42D1, 0xB5, 0xAF, 0x69, 0xEA, 0x33, 0x8E, 0xF8, 0x50);

        public static readonly Guid MF_PMP_SERVER_CONTEXT = new Guid(0x2F00C910, 0xD2CF, 0x4278, 0x8B, 0x6A, 0xD0, 0x77, 0xFA, 0xC3, 0xA2, 0x5F);

        public static readonly Guid IID_IMFSourceResolver = new Guid(0xFBE5A32D, 0xA497, 0x4B61, 0xBB, 0x85, 0x97, 0xB1, 0xA8, 0x48, 0xA6, 0xE3);

        public static readonly PROPERTYKEY MFPKEY_ASFMediaSource_IterativeSeekIfNoIndex = new PROPERTYKEY { fmtid = new Guid(0x170B65DC, 0x4A4E, 0x407A, 0xAC, 0x22, 0x57, 0x7F, 0x50, 0xE4, 0xA3, 0x7C), pid = 0x01 };

        public static readonly PROPERTYKEY MFPKEY_ASFMediaSource_IterativeSeek_Max_Count = new PROPERTYKEY { fmtid = new Guid(0x170B65DC, 0x4A4E, 0x407A, 0xAC, 0x22, 0x57, 0x7F, 0x50, 0xE4, 0xA3, 0x7C), pid = 0x02 };

        public static readonly PROPERTYKEY MFPKEY_ASFMediaSource_IterativeSeek_Tolerance_In_MilliSecond = new PROPERTYKEY { fmtid = new Guid(0x170B65DC, 0x4A4E, 0x407A, 0xAC, 0x22, 0x57, 0x7F, 0x50, 0xE4, 0xA3, 0x7C), pid = 0x03 };

        public static readonly PROPERTYKEY MFPKEY_Content_DLNA_Profile_ID = new PROPERTYKEY { fmtid = new Guid(0xCFA31B45, 0x525D, 0x4998, 0xBB, 0x44, 0x3F, 0x7D, 0x81, 0x54, 0x2F, 0xA4), pid = 0x01 };

        public static readonly PROPERTYKEY MFPKEY_MediaSource_DisableReadAhead = new PROPERTYKEY { fmtid = new Guid(0x26366C14, 0xC5BF, 0x4C76, 0x88, 0x7B, 0x9F, 0x17, 0x54, 0xDB, 0x5F, 0x9), pid = 0x01 };

        public static readonly PROPERTYKEY MFPKEY_SBESourceMode = new PROPERTYKEY { fmtid = new Guid(0x3FAE10BB, 0xF859, 0x4192, 0xB5, 0x62, 0x18, 0x68, 0xD3, 0xDA, 0x3A, 0x02), pid = 0x01 };

        public static readonly PROPERTYKEY MFPKEY_PMP_Creation_Callback = new PROPERTYKEY { fmtid = new Guid(0x28BB4DE2, 0x26A2, 0x4870, 0xB7, 0x20, 0xD2, 0x6B, 0xBE, 0xB1, 0x49, 0x42), pid = 0x01 };

        public static readonly PROPERTYKEY MFPKEY_HTTP_ByteStream_Enable_Urlmon = new PROPERTYKEY { fmtid = new Guid(0xEDA8AFDF, 0xC171, 0x417F, 0x8D, 0x17, 0x2E, 0x09, 0x18, 0x30, 0x32, 0x92), pid = 0x01 };

        public static readonly PROPERTYKEY MFPKEY_HTTP_ByteStream_Urlmon_Bind_Flags = new PROPERTYKEY { fmtid = new Guid(0xEDA8AFDF, 0xC171, 0x417F, 0x8D, 0x17, 0x2E, 0x09, 0x18, 0x30, 0x32, 0x92), pid = 0x02 };

        public static readonly PROPERTYKEY MFPKEY_HTTP_ByteStream_Urlmon_Security_Id = new PROPERTYKEY { fmtid = new Guid(0xEDA8AFDF, 0xC171, 0x417F, 0x8D, 0x17, 0x2E, 0x09, 0x18, 0x30, 0x32, 0x92), pid = 0x03 };

        public static readonly PROPERTYKEY MFPKEY_HTTP_ByteStream_Urlmon_Window = new PROPERTYKEY { fmtid = new Guid(0xEDA8AFDF, 0xC171, 0x417F, 0x8D, 0x17, 0x2E, 0x09, 0x18, 0x30, 0x32, 0x92), pid = 0x04 };

        public static readonly PROPERTYKEY MFPKEY_HTTP_ByteStream_Urlmon_Callback_QueryService = new PROPERTYKEY { fmtid = new Guid(0xEDA8AFDF, 0xC171, 0x417F, 0x8D, 0x17, 0x2E, 0x09, 0x18, 0x30, 0x32, 0x92), pid = 0x05 };

        public static readonly PROPERTYKEY MFPKEY_MediaProtectionSystemId = new PROPERTYKEY { fmtid = new Guid(0x636B271D, 0xDDC7, 0x49E9, 0xA6, 0xC6, 0x47, 0x38, 0x59, 0x62, 0xE5, 0xBD), pid = 0x01 };

        public static readonly PROPERTYKEY MFPKEY_MediaProtectionSystemContext = new PROPERTYKEY { fmtid = new Guid(0x636B271D, 0xDDC7, 0x49E9, 0xA6, 0xC6, 0x47, 0x38, 0x59, 0x62, 0xE5, 0xBD), pid = 0x02 };

        public static readonly PROPERTYKEY MFPKEY_MediaProtectionSystemIdMapping = new PROPERTYKEY { fmtid = new Guid(0x636B271D, 0xDDC7, 0x49E9, 0xA6, 0xC6, 0x47, 0x38, 0x59, 0x62, 0xE5, 0xBD), pid = 0x03 };

        public static readonly PROPERTYKEY MFPKEY_MediaProtectionContainerGuid = new PROPERTYKEY { fmtid = new Guid(0x42AF3D7C, 0xCF, 0x4A0F, 0x81, 0xF0, 0xAD, 0xF5, 0x24, 0xA5, 0xA5, 0xB5), pid = 0x1 };

        public static readonly PROPERTYKEY MFPKEY_MediaProtectionSystemContextsPerTrack = new PROPERTYKEY { fmtid = new Guid(0x4454B092, 0xD3DA, 0x49B0, 0x84, 0x52, 0x68, 0x50, 0xC7, 0xDB, 0x76, 0x4D), pid = 0x03 };

        public static readonly PROPERTYKEY MFPKEY_HTTP_ByteStream_Download_Mode = new PROPERTYKEY { fmtid = new Guid(0x817F11B7, 0xA982, 0x46EC, 0xA4, 0x49, 0xEF, 0x58, 0xAE, 0xD5, 0x3C, 0xA8), pid = 0x01 };

        public static readonly PROPERTYKEY MFPKEY_HTTP_ByteStream_Caching_Mode = new PROPERTYKEY { fmtid = new Guid(0x86A2403E, 0xC78B, 0x44D7, 0x8B, 0xC8, 0xFF, 0x72, 0x58, 0x11, 0x75, 0x08), pid = 0x01 };

        public static readonly PROPERTYKEY MFPKEY_HTTP_ByteStream_Cache_Limit = new PROPERTYKEY { fmtid = new Guid(0x86A2403E, 0xC78B, 0x44D7, 0x8B, 0xC8, 0xFF, 0x72, 0x58, 0x11, 0x75, 0x08), pid = 0x02 };

        public static readonly Guid MF_TIME_FORMAT_ENTRY_RELATIVE = new Guid(0x4399F178, 0x46D3, 0x4504, 0xAF, 0xDA, 0x20, 0xD3, 0x2E, 0x9B, 0xA3, 0x60);

        public static readonly Guid IID_IMFMediaSource = new Guid(0x279A808D, 0xAEC7, 0x40C8, 0x9C, 0x6B, 0xA6, 0xB4, 0x92, 0xC7, 0x8A, 0x66);

        public static readonly Guid IID_IMFMediaSourceEx = new Guid(0x3C9B2EB9, 0x86D5, 0x4514, 0xA3, 0x94, 0xF5, 0x66, 0x64, 0xF9, 0xF0, 0xD8);

        public static readonly Guid MF_SOURCE_STREAM_SUPPORTS_HW_CONNECTION = new Guid(0xA38253AA, 0x6314, 0x42FD, 0xA3, 0xCE, 0xBB, 0x27, 0xB6, 0x85, 0x99, 0x46);

        public static readonly Guid IID_IMFClockConsumer = new Guid(0x6EF2A662, 0x47C0, 0x4666, 0xB1, 0x3D, 0xCB, 0xB7, 0x17, 0xF2, 0xFA, 0x2C);

        public static readonly Guid IID_IMFMediaStream = new Guid(0xD182108F, 0x4EC6, 0x443F, 0xAA, 0x42, 0xA7, 0x11, 0x06, 0xEC, 0x82, 0x5F);

        public static readonly Guid MF_STREAM_SINK_SUPPORTS_HW_CONNECTION = new Guid(0x9B465CBF, 0x597, 0x4F9E, 0x9F, 0x3C, 0xB9, 0x7E, 0xEE, 0xF9, 0x3, 0x59);

        public static readonly Guid MF_STREAM_SINK_SUPPORTS_ROTATION = new Guid(0xB3E96280, 0xBD05, 0x41A5, 0x97, 0xAD, 0x8A, 0x7F, 0xEE, 0x24, 0xB9, 0x12);

        public static readonly Guid MF_SINK_VIDEO_PTS = new Guid(0x2162BDE7, 0x421E, 0x4B90, 0x9B, 0x33, 0xE5, 0x8F, 0xBF, 0x1D, 0x58, 0xB6);

        public static readonly Guid MF_SINK_VIDEO_NATIVE_WIDTH = new Guid(0xE6D6A707, 0x1505, 0x4747, 0x9B, 0x10, 0x72, 0xD2, 0xD1, 0x58, 0xCB, 0x3A);

        public static readonly Guid MF_SINK_VIDEO_NATIVE_HEIGHT = new Guid(0xF0CA6705, 0x490C, 0x43E8, 0x94, 0x1C, 0xC0, 0xB3, 0x20, 0x6B, 0x9A, 0x65);

        public static readonly Guid MF_SINK_VIDEO_DISPLAY_ASPECT_RATIO_NUMERATOR = new Guid(0xD0F33B22, 0xB78A, 0x4879, 0xB4, 0x55, 0xF0, 0x3E, 0xF3, 0xFA, 0x82, 0xCD);

        public static readonly Guid MF_SINK_VIDEO_DISPLAY_ASPECT_RATIO_DENOMINATOR = new Guid(0x6EA1EB97, 0x1FE0, 0x4F10, 0xA6, 0xE4, 0x1F, 0x4F, 0x66, 0x15, 0x64, 0xE0);

        public static readonly Guid MF_BD_MVC_PLANE_OFFSET_METADATA = new Guid(0x62A654E4, 0xB76C, 0x4901, 0x98, 0x23, 0x2C, 0xB6, 0x15, 0xD4, 0x73, 0x18);

        public static readonly Guid MF_LUMA_KEY_ENABLE = new Guid(0x7369820F, 0x76DE, 0x43CA, 0x92, 0x84, 0x47, 0xB8, 0xF3, 0x7E, 0x06, 0x49);

        public static readonly Guid MF_LUMA_KEY_LOWER = new Guid(0x93D7B8D5, 0x0B81, 0x4715, 0xAE, 0xA0, 0x87, 0x25, 0x87, 0x16, 0x21, 0xE9);

        public static readonly Guid MF_LUMA_KEY_UPPER = new Guid(0xD09F39BB, 0x4602, 0x4C31, 0xA7, 0x06, 0xA1, 0x21, 0x71, 0xA5, 0x11, 0x0A);

        public static readonly Guid MF_USER_EXTENDED_ATTRIBUTES = new Guid(0xC02ABAC6, 0xFEB2, 0x4541, 0x92, 0x2F, 0x92, 0x0B, 0x43, 0x70, 0x27, 0x22);

        public static readonly Guid MF_INDEPENDENT_STILL_IMAGE = new Guid(0xEA12AF41, 0x0710, 0x42C9, 0xA1, 0x27, 0xDA, 0xA3, 0xE7, 0x84, 0x83, 0xA5);

        public static readonly Guid IID_IMFMediaSink = new Guid(0x6EF2A660, 0x47C0, 0x4666, 0xB1, 0x3D, 0xCB, 0xB7, 0x17, 0xF2, 0xFA, 0x2C);

        public static readonly Guid IID_IMFStreamSink = new Guid(0x0A97B3CF, 0x8E7C, 0x4A3D, 0x8F, 0x8C, 0x0C, 0x84, 0x3D, 0xC2, 0x47, 0xFB);

        public static readonly Guid IID_IMFVideoSampleAllocator = new Guid(0x86CBC910, 0xE533, 0x4751, 0x8E, 0x3B, 0xF1, 0x9B, 0x5B, 0x80, 0x6A, 0x03);

        public static readonly Guid IID_IMFVideoSampleAllocatorNotify = new Guid(0xA792CDBE, 0xC374, 0x4E89, 0x83, 0x35, 0x27, 0x8E, 0x7B, 0x99, 0x56, 0xA4);

        public static readonly Guid IID_IMFVideoSampleAllocatorNotifyEx = new Guid(0x3978AA1A, 0x6D5B, 0x4B7F, 0xA3, 0x40, 0x90, 0x89, 0x91, 0x89, 0xAE, 0x34);

        public static readonly Guid IID_IMFVideoSampleAllocatorCallback = new Guid(0x992388B4, 0x3372, 0x4F67, 0x8B, 0x6F, 0xC8, 0x4C, 0x07, 0x1F, 0x47, 0x51);

        public static readonly Guid IID_IMFVideoSampleAllocatorEx = new Guid(0x545B3A48, 0x3283, 0x4F62, 0x86, 0x6F, 0xA6, 0x2D, 0x8F, 0x59, 0x8F, 0x9F);

        public static readonly Guid IID_IMFDXGIDeviceManagerSource = new Guid(0x20BC074B, 0x7A8D, 0x4609, 0x8C, 0x3B, 0x64, 0xA0, 0xA3, 0xB5, 0xD7, 0xCE);

        public static readonly Guid IID_IMFVideoProcessorControl = new Guid(0xA3F675D5, 0x6119, 0x4F7F, 0xA1, 0x00, 0x1D, 0x8B, 0x28, 0x0F, 0x0E, 0xFB);

        public static readonly Guid IID_IMFVideoProcessorControl2 = new Guid(0xBDE633D3, 0xE1DC, 0x4A7F, 0xA6, 0x93, 0xBB, 0xAE, 0x39, 0x9C, 0x4A, 0x20);

        public static readonly Guid MF_XVP_SAMPLE_LOCK_TIMEOUT = new Guid(0xAA4DDB29, 0x5134, 0x4363, 0xAC, 0x72, 0x83, 0xEC, 0x4B, 0xC1, 0x4, 0x26);

        public static readonly Guid IID_IMFVideoProcessorControl3 = new Guid(0x2424B3F2, 0xEB23, 0x40F1, 0x91, 0xAA, 0x74, 0xBD, 0xDE, 0xEA, 0x08, 0x83);

        public static readonly Guid IID_IMFVideoRendererEffectControl = new Guid(0x604D33D7, 0xCF23, 0x41D5, 0x82, 0x24, 0x5B, 0xBB, 0xB1, 0xA8, 0x74, 0x75);

        public static readonly Guid IID_IMFTopology = new Guid(0x83CF873A, 0xF6DA, 0x4BC8, 0x82, 0x3F, 0xBA, 0xCF, 0xD5, 0x5D, 0xC4, 0x33);

        public static readonly Guid MF_TOPOLOGY_PROJECTSTART = new Guid(0x7ED3F802, 0x86BB, 0x4B3F, 0xB7, 0xE4, 0x7C, 0xB4, 0x3A, 0xFD, 0x4B, 0x80);

        public static readonly Guid MF_TOPOLOGY_PROJECTSTOP = new Guid(0x7ED3F803, 0x86BB, 0x4B3F, 0xB7, 0xE4, 0x7C, 0xB4, 0x3A, 0xFD, 0x4B, 0x80);

        public static readonly Guid MF_TOPOLOGY_NO_MARKIN_MARKOUT = new Guid(0x7ED3F804, 0x86BB, 0x4B3F, 0xB7, 0xE4, 0x7C, 0xB4, 0x3A, 0xFD, 0x4B, 0x80);

        public static readonly Guid MF_TOPOLOGY_DXVA_MODE = new Guid(0x1E8D34F6, 0xF5AB, 0x4E23, 0xBB, 0x88, 0x87, 0x4A, 0xA3, 0xA1, 0xA7, 0x4D);

        public static readonly Guid MF_TOPOLOGY_ENABLE_XVP_FOR_PLAYBACK = new Guid(0x1967731F, 0xCD78, 0x42FC, 0xB0, 0x26, 0x9, 0x92, 0xA5, 0x6E, 0x56, 0x93);

        public static readonly Guid MF_TOPOLOGY_STATIC_PLAYBACK_OPTIMIZATIONS = new Guid(0xB86CAC42, 0x41A6, 0x4B79, 0x89, 0x7A, 0x1A, 0xB0, 0xE5, 0x2B, 0x4A, 0x1B);

        public static readonly Guid MF_TOPOLOGY_PLAYBACK_MAX_DIMS = new Guid(0x5715CF19, 0x5768, 0x44AA, 0xAD, 0x6E, 0x87, 0x21, 0xF1, 0xB0, 0xF9, 0xBB);

        public static readonly Guid MF_TOPOLOGY_HARDWARE_MODE = new Guid(0xD2D362FD, 0x4E4F, 0x4191, 0xA5, 0x79, 0xC6, 0x18, 0xB6, 0x67, 0x6, 0xAF);

        public static readonly Guid MF_TOPOLOGY_PLAYBACK_FRAMERATE = new Guid(0xC164737A, 0xC2B1, 0x4553, 0x83, 0xBB, 0x5A, 0x52, 0x60, 0x72, 0x44, 0x8F);

        public static readonly Guid MF_TOPOLOGY_DYNAMIC_CHANGE_NOT_ALLOWED = new Guid(0xD529950B, 0xD484, 0x4527, 0xA9, 0xCD, 0xB1, 0x90, 0x95, 0x32, 0xB5, 0xB0);

        public static readonly Guid MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES = new Guid(0x6248C36D, 0x5D0B, 0x4F40, 0xA0, 0xBB, 0xB0, 0xB3, 0x05, 0xF7, 0x76, 0x98);

        public static readonly Guid MF_TOPOLOGY_START_TIME_ON_PRESENTATION_SWITCH = new Guid(0xC8CC113F, 0x7951, 0x4548, 0xAA, 0xD6, 0x9E, 0xD6, 0x20, 0x2E, 0x62, 0xB3);

        public static readonly Guid MF_DISABLE_LOCALLY_REGISTERED_PLUGINS = new Guid(0x66B16DA9, 0xADD4, 0x47E0, 0xA1, 0x6B, 0x5A, 0xF1, 0xFB, 0x48, 0x36, 0x34);

        public static readonly Guid MF_LOCAL_PLUGIN_CONTROL_POLICY = new Guid(0xD91B0085, 0xC86D, 0x4F81, 0x88, 0x22, 0x8C, 0x68, 0xE1, 0xD7, 0xFA, 0x04);

        public static readonly Guid IID_IMFTopologyNode = new Guid(0x83CF873A, 0xF6DA, 0x4BC8, 0x82, 0x3F, 0xBA, 0xCF, 0xD5, 0x5D, 0xC4, 0x30);

        public static readonly Guid MF_TOPONODE_FLUSH = new Guid(0x494BBCE8, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_DRAIN = new Guid(0x494BBCE9, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_D3DAWARE = new Guid(0x494BBCED, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPOLOGY_RESOLUTION_STATUS = new Guid(0x494BBCDE, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_ERRORCODE = new Guid(0x494BBCEE, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_CONNECT_METHOD = new Guid(0x494BBCF1, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_LOCKED = new Guid(0x494BBCF7, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_WORKQUEUE_ID = new Guid(0x494BBCF8, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_WORKQUEUE_MMCSS_CLASS = new Guid(0x494BBCF9, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_DECRYPTOR = new Guid(0x494BBCFA, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_DISCARDABLE = new Guid(0x494BBCFB, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_ERROR_MAJORTYPE = new Guid(0x494BBCFD, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_ERROR_SUBTYPE = new Guid(0x494BBCFE, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_WORKQUEUE_MMCSS_TASKID = new Guid(0x494BBCFF, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_WORKQUEUE_MMCSS_PRIORITY = new Guid(0x5001F840, 0x2816, 0x48F4, 0x93, 0x64, 0xAD, 0x1E, 0xF6, 0x61, 0xA1, 0x23);

        public static readonly Guid MF_TOPONODE_WORKQUEUE_ITEM_PRIORITY = new Guid(0xA1FF99BE, 0x5E97, 0x4A53, 0xB4, 0x94, 0x56, 0x8C, 0x64, 0x2C, 0x0F, 0xF3);

        public static readonly Guid MF_TOPONODE_MARKIN_HERE = new Guid(0x494BBD00, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_MARKOUT_HERE = new Guid(0x494BBD01, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_DECODER = new Guid(0x494BBD02, 0xB031, 0x4E38, 0x97, 0xC4, 0xD5, 0x42, 0x2D, 0xD6, 0x18, 0xDC);

        public static readonly Guid MF_TOPONODE_MEDIASTART = new Guid(0x835C58EA, 0xE075, 0x4BC7, 0xBC, 0xBA, 0x4D, 0xE0, 0x00, 0xDF, 0x9A, 0xE6);

        public static readonly Guid MF_TOPONODE_MEDIASTOP = new Guid(0x835C58EB, 0xE075, 0x4BC7, 0xBC, 0xBA, 0x4D, 0xE0, 0x00, 0xDF, 0x9A, 0xE6);

        public static readonly Guid MF_TOPONODE_SOURCE = new Guid(0x835C58EC, 0xE075, 0x4BC7, 0xBC, 0xBA, 0x4D, 0xE0, 0x00, 0xDF, 0x9A, 0xE6);

        public static readonly Guid MF_TOPONODE_PRESENTATION_DESCRIPTOR = new Guid(0x835C58ED, 0xE075, 0x4BC7, 0xBC, 0xBA, 0x4D, 0xE0, 0x00, 0xDF, 0x9A, 0xE6);

        public static readonly Guid MF_TOPONODE_STREAM_DESCRIPTOR = new Guid(0x835C58EE, 0xE075, 0x4BC7, 0xBC, 0xBA, 0x4D, 0xE0, 0x00, 0xDF, 0x9A, 0xE6);

        public static readonly Guid MF_TOPONODE_SEQUENCE_ELEMENTID = new Guid(0x835C58EF, 0xE075, 0x4BC7, 0xBC, 0xBA, 0x4D, 0xE0, 0x00, 0xDF, 0x9A, 0xE6);

        public static readonly Guid MF_TOPONODE_TRANSFORM_OBJECTID = new Guid(0x88DCC0C9, 0x293E, 0x4E8B, 0x9A, 0xEB, 0xA, 0xD6, 0x4C, 0xC0, 0x16, 0xB0);

        public static readonly Guid MF_TOPONODE_STREAMID = new Guid(0x14932F9B, 0x9087, 0x4BB4, 0x84, 0x12, 0x51, 0x67, 0x14, 0x5C, 0xBE, 0x04);

        public static readonly Guid MF_TOPONODE_NOSHUTDOWN_ON_REMOVE = new Guid(0x14932F9C, 0x9087, 0x4BB4, 0x84, 0x12, 0x51, 0x67, 0x14, 0x5C, 0xBE, 0x04);

        public static readonly Guid MF_TOPONODE_RATELESS = new Guid(0x14932F9D, 0x9087, 0x4BB4, 0x84, 0x12, 0x51, 0x67, 0x14, 0x5C, 0xBE, 0x04);

        public static readonly Guid MF_TOPONODE_DISABLE_PREROLL = new Guid(0x14932F9E, 0x9087, 0x4BB4, 0x84, 0x12, 0x51, 0x67, 0x14, 0x5C, 0xBE, 0x04);

        public static readonly Guid MF_TOPONODE_PRIMARYOUTPUT = new Guid(0x6304EF99, 0x16B2, 0x4EBE, 0x9D, 0x67, 0xE4, 0xC5, 0x39, 0xB3, 0xA2, 0x59);

        public static readonly Guid IID_IMFGetService = new Guid(0xFA993888, 0x4383, 0x415A, 0xA9, 0x30, 0xDD, 0x47, 0x2A, 0x8C, 0xF6, 0xF7);

        public static readonly Guid IID_IMFClock = new Guid(0x2EB1E945, 0x18B8, 0x4139, 0x9B, 0x1A, 0xD5, 0xD5, 0x84, 0x81, 0x85, 0x30);

        public static readonly Guid IID_IMFPresentationClock = new Guid(0x868CE85C, 0x8EA9, 0x4F55, 0xAB, 0x82, 0xB0, 0x09, 0xA9, 0x10, 0xA8, 0x05);

        public static readonly Guid IID_IMFPresentationTimeSource = new Guid(0x7FF12CCE, 0xF76F, 0x41C2, 0x86, 0x3B, 0x16, 0x66, 0xC8, 0xE5, 0xE1, 0x39);

        public static readonly Guid IID_IMFClockStateSink = new Guid(0xF6696E82, 0x74F7, 0x4F3D, 0xA1, 0x78, 0x8A, 0x5E, 0x09, 0xC3, 0x65, 0x9F);

        public static readonly Guid MF_PD_PMPHOST_CONTEXT = new Guid(0x6C990D31, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_APP_CONTEXT = new Guid(0x6C990D32, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_DURATION = new Guid(0x6C990D33, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_TOTAL_FILE_SIZE = new Guid(0x6C990D34, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_AUDIO_ENCODING_BITRATE = new Guid(0x6C990D35, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_VIDEO_ENCODING_BITRATE = new Guid(0x6C990D36, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_MIME_TYPE = new Guid(0x6C990D37, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_LAST_MODIFIED_TIME = new Guid(0x6C990D38, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_PLAYBACK_ELEMENT_ID = new Guid(0x6C990D39, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_PREFERRED_LANGUAGE = new Guid(0x6C990D3A, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_PLAYBACK_BOUNDARY_TIME = new Guid(0x6C990D3B, 0xBB8E, 0x477A, 0x85, 0x98, 0xD, 0x5D, 0x96, 0xFC, 0xD8, 0x8A);

        public static readonly Guid MF_PD_AUDIO_ISVARIABLEBITRATE = new Guid(0x33026EE0, 0xE387, 0x4582, 0xAE, 0x0A, 0x34, 0xA2, 0xAD, 0x3B, 0xAA, 0x18);

        public static readonly Guid MF_PD_ADAPTIVE_STREAMING = new Guid(0xEA0D5D97, 0x29F9, 0x488B, 0xAE, 0x6B, 0x7D, 0x6B, 0x41, 0x36, 0x11, 0x2B);

        public static readonly Guid IID_IMFPresentationDescriptor = new Guid(0x03CB2711, 0x24D7, 0x4DB6, 0xA1, 0x7F, 0xF3, 0xA7, 0xA4, 0x79, 0xA5, 0x36);

        public static readonly Guid MF_SD_LANGUAGE = new Guid(0xAF2180, 0xBDC2, 0x423C, 0xAB, 0xCA, 0xF5, 0x3, 0x59, 0x3B, 0xC1, 0x21);

        public static readonly Guid MF_SD_PROTECTED = new Guid(0xAF2181, 0xBDC2, 0x423C, 0xAB, 0xCA, 0xF5, 0x3, 0x59, 0x3B, 0xC1, 0x21);

        public static readonly Guid MF_SD_STREAM_NAME = new Guid(0x4F1B099D, 0xD314, 0x41E5, 0xA7, 0x81, 0x7F, 0xEF, 0xAA, 0x4C, 0x50, 0x1F);

        public static readonly Guid MF_SD_MUTUALLY_EXCLUSIVE = new Guid(0x23EF79C, 0x388D, 0x487F, 0xAC, 0x17, 0x69, 0x6C, 0xD6, 0xE3, 0xC6, 0xF5);

        public static readonly Guid IID_IMFStreamDescriptor = new Guid(0x56C03D9C, 0x9DBB, 0x45F5, 0xAB, 0x4B, 0xD8, 0x0F, 0x47, 0xC0, 0x59, 0x38);

        public static readonly Guid IID_IMFMediaTypeHandler = new Guid(0xE93DCF6C, 0x4B07, 0x4E1E, 0x81, 0x23, 0xAA, 0x16, 0xED, 0x6E, 0xAD, 0xF5);

        public static readonly Guid IID_IMFTimer = new Guid(0xE56E4CBD, 0x8F70, 0x49D8, 0xA0, 0xF8, 0xED, 0xB3, 0xD6, 0xAB, 0x9B, 0xF2);

        public static readonly Guid MF_ACTIVATE_CUSTOM_VIDEO_MIXER_CLSID = new Guid(0xBA491360, 0xBE50, 0x451E, 0x95, 0xAB, 0x6D, 0x4A, 0xCC, 0xC7, 0xDA, 0xD8);

        public static readonly Guid MF_ACTIVATE_CUSTOM_VIDEO_MIXER_ACTIVATE = new Guid(0xBA491361, 0xBE50, 0x451E, 0x95, 0xAB, 0x6D, 0x4A, 0xCC, 0xC7, 0xDA, 0xD8);

        public static readonly Guid MF_ACTIVATE_CUSTOM_VIDEO_MIXER_FLAGS = new Guid(0xBA491362, 0xBE50, 0x451E, 0x95, 0xAB, 0x6D, 0x4A, 0xCC, 0xC7, 0xDA, 0xD8);

        public static readonly Guid MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_CLSID = new Guid(0xBA491364, 0xBE50, 0x451E, 0x95, 0xAB, 0x6D, 0x4A, 0xCC, 0xC7, 0xDA, 0xD8);

        public static readonly Guid MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_ACTIVATE = new Guid(0xBA491365, 0xBE50, 0x451E, 0x95, 0xAB, 0x6D, 0x4A, 0xCC, 0xC7, 0xDA, 0xD8);

        public static readonly Guid MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_FLAGS = new Guid(0xBA491366, 0xBE50, 0x451E, 0x95, 0xAB, 0x6D, 0x4A, 0xCC, 0xC7, 0xDA, 0xD8);

        public static readonly Guid MF_ACTIVATE_MFT_LOCKED = new Guid(0xC1F6093C, 0x7F65, 0x4FBD, 0x9E, 0x39, 0x5F, 0xAE, 0xC3, 0xC4, 0xFB, 0xD7);

        public static readonly Guid MF_ACTIVATE_VIDEO_WINDOW = new Guid(0x9A2DBBDD, 0xF57E, 0x4162, 0x82, 0xB9, 0x68, 0x31, 0x37, 0x76, 0x82, 0xD3);

        public static readonly Guid IID_IMFShutdown = new Guid(0x97EC2EA4, 0x0E42, 0x4937, 0x97, 0xAC, 0x9D, 0x6D, 0x32, 0x88, 0x24, 0xE1);

        public static readonly Guid MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS = new Guid(0xEDE4B5E0, 0xF805, 0x4D6C, 0x99, 0xB3, 0xDB, 0x01, 0xBF, 0x95, 0xDF, 0xAB);

        public static readonly Guid MF_AUDIO_RENDERER_ATTRIBUTE_SESSION_ID = new Guid(0xEDE4B5E3, 0xF805, 0x4D6C, 0x99, 0xB3, 0xDB, 0x01, 0xBF, 0x95, 0xDF, 0xAB);

        public static readonly Guid MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ID = new Guid(0xB10AAEC3, 0xEF71, 0x4CC3, 0xB8, 0x73, 0x5, 0xA9, 0xA0, 0x8B, 0x9F, 0x8E);

        public static readonly Guid MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ROLE = new Guid(0x6BA644FF, 0x27C5, 0x4D02, 0x98, 0x87, 0xC2, 0x86, 0x19, 0xFD, 0xB9, 0x1B);

        public static readonly Guid MF_AUDIO_RENDERER_ATTRIBUTE_STREAM_CATEGORY = new Guid(0xA9770471, 0x92EC, 0x4DF4, 0x94, 0xFE, 0x81, 0xC3, 0x6F, 0xC, 0x3A, 0x7A);

        public static readonly Guid IID_IMFTopoLoader = new Guid(0xDE9A6157, 0xF660, 0x4643, 0xB5, 0x6A, 0xDF, 0x9F, 0x79, 0x98, 0xC7, 0xCD);

        public static readonly Guid IID_IMFContentProtectionManager = new Guid(0xACF92459, 0x6A61, 0x42BD, 0xB5, 0x7C, 0xB4, 0x3E, 0x51, 0x20, 0x3C, 0xB0);

        public static readonly Guid IID_IMFContentEnabler = new Guid(0xD3C4EF59, 0x49CE, 0x4381, 0x90, 0x71, 0xD5, 0xBC, 0xD0, 0x44, 0xC7, 0x70);

        public static readonly Guid MFENABLETYPE_WMDRMV1_LicenseAcquisition = new Guid(0x4FF6EEAF, 0xB43, 0x4797, 0x9B, 0x85, 0xAB, 0xF3, 0x18, 0x15, 0xE7, 0xB0);

        public static readonly Guid MFENABLETYPE_WMDRMV7_LicenseAcquisition = new Guid(0x3306DF, 0x4A06, 0x4884, 0xA0, 0x97, 0xEF, 0x6D, 0x22, 0xEC, 0x84, 0xA3);

        public static readonly Guid MFENABLETYPE_WMDRMV7_Individualization = new Guid(0xACD2C84A, 0xB303, 0x4F65, 0xBC, 0x2C, 0x2C, 0x84, 0x8D, 0x1, 0xA9, 0x89);

        public static readonly Guid MFENABLETYPE_MF_UpdateRevocationInformation = new Guid(0xE558B0B5, 0xB3C4, 0x44A0, 0x92, 0x4C, 0x50, 0xD1, 0x78, 0x93, 0x23, 0x85);

        public static readonly Guid MFENABLETYPE_MF_UpdateUntrustedComponent = new Guid(0x9879F3D6, 0xCEE2, 0x48E6, 0xB5, 0x73, 0x97, 0x67, 0xAB, 0x17, 0x2F, 0x16);

        public static readonly Guid MFENABLETYPE_MF_RebootRequired = new Guid(0x6D4D3D4B, 0x0ECE, 0x4652, 0x8B, 0x3A, 0xF2, 0xD2, 0x42, 0x60, 0xD8, 0x87);

        public static readonly Guid IID_IMFMetadata = new Guid(0xF88CFB8C, 0xEF16, 0x4991, 0xB4, 0x50, 0xCB, 0x8C, 0x69, 0xE5, 0x17, 0x04);

        public static readonly Guid IID_IMFMetadataProvider = new Guid(0x56181D2D, 0xE221, 0x4ADB, 0xB1, 0xC8, 0x3C, 0xEE, 0x6A, 0x53, 0xF7, 0x6F);

        public static readonly Guid MF_METADATA_PROVIDER_SERVICE = new Guid(0xDB214084, 0x58A4, 0x4D2E, 0xB8, 0x4F, 0x6F, 0x75, 0x5B, 0x2F, 0x7A, 0xD);

        public static readonly Guid MF_PROPERTY_HANDLER_SERVICE = new Guid(0xA3FACE02, 0x32B8, 0x41DD, 0x90, 0xE7, 0x5F, 0xEF, 0x7C, 0x89, 0x91, 0xB5);

        public static readonly Guid IID_IMFRateSupport = new Guid(0x0A9CCDBC, 0xD797, 0x4563, 0x96, 0x67, 0x94, 0xEC, 0x5D, 0x79, 0x29, 0x2D);

        public static readonly Guid MF_RATE_CONTROL_SERVICE = new Guid(0x866FA297, 0xB802, 0x4BF8, 0x9D, 0xC9, 0x5E, 0x3B, 0x6A, 0x9F, 0x53, 0xC9);

        public static readonly Guid IID_IMFRateControl = new Guid(0x88DDCD21, 0x03C3, 0x4275, 0x91, 0xED, 0x55, 0xEE, 0x39, 0x29, 0x32, 0x8F);

        public static readonly Guid IID_IMFTimecodeTranslate = new Guid(0xAB9D8661, 0xF7E8, 0x4EF4, 0x98, 0x61, 0x89, 0xF3, 0x34, 0xF9, 0x4E, 0x74);

        public static readonly Guid MF_TIMECODE_SERVICE = new Guid(0xA0D502A7, 0x0EB3, 0x4885, 0xB1, 0xB9, 0x9F, 0xEB, 0x0D, 0x08, 0x34, 0x54);

        public static readonly Guid IID_IMFSeekInfo = new Guid(0x26AFEA53, 0xD9ED, 0x42B5, 0xAB, 0x80, 0xE6, 0x4F, 0x9E, 0xE3, 0x47, 0x79);

        public static readonly Guid IID_IMFSimpleAudioVolume = new Guid(0x089EDF13, 0xCF71, 0x4338, 0x8D, 0x13, 0x9E, 0x56, 0x9D, 0xBD, 0xC3, 0x19);

        public static readonly Guid MR_POLICY_VOLUME_SERVICE = new Guid(0x1ABAA2AC, 0x9D3B, 0x47C6, 0xAB, 0x48, 0xC5, 0x95, 0x6, 0xDE, 0x78, 0x4D);

        public static readonly Guid MR_CAPTURE_POLICY_VOLUME_SERVICE = new Guid(0x24030ACD, 0x107A, 0x4265, 0x97, 0x5C, 0x41, 0x4E, 0x33, 0xE6, 0x5F, 0x2A);

        public static readonly Guid IID_IMFAudioStreamVolume = new Guid(0x76B1BBDB, 0x4EC8, 0x4F36, 0xB1, 0x06, 0x70, 0xA9, 0x31, 0x6D, 0xF5, 0x93);

        public static readonly Guid MR_STREAM_VOLUME_SERVICE = new Guid(0xF8B5FA2F, 0x32EF, 0x46F5, 0xB1, 0x72, 0x13, 0x21, 0x21, 0x2F, 0xB2, 0xC4);

        public static readonly Guid IID_IMFAudioPolicy = new Guid(0xA0638C2B, 0x6465, 0x4395, 0x9A, 0xE7, 0xA3, 0x21, 0xA9, 0xFD, 0x28, 0x56);

        public static readonly Guid MR_AUDIO_POLICY_SERVICE = new Guid(0x911FD737, 0x6775, 0x4AB0, 0xA6, 0x14, 0x29, 0x78, 0x62, 0xFD, 0xAC, 0x88);

        public static readonly Guid IID_IMFSampleGrabberSinkCallback = new Guid(0x8C7B80BF, 0xEE42, 0x4B59, 0xB1, 0xDF, 0x55, 0x66, 0x8E, 0x1B, 0xDC, 0xA8);

        public static readonly Guid MF_SAMPLEGRABBERSINK_SAMPLE_TIME_OFFSET = new Guid(0x62E3D776, 0x8100, 0x4E03, 0xA6, 0xE8, 0xBD, 0x38, 0x57, 0xAC, 0x9C, 0x47);

        public static readonly Guid MF_SAMPLEGRABBERSINK_IGNORE_CLOCK = new Guid(0x0EFDA2C0, 0x2B69, 0x4E2E, 0xAB, 0x8D, 0x46, 0xDC, 0xBF, 0xF7, 0xD2, 0x5D);

        public static readonly Guid IID_IMFSampleGrabberSinkCallback2 = new Guid(0xCA86AA50, 0xC46E, 0x429E, 0xAB, 0x27, 0x16, 0xD6, 0xAC, 0x68, 0x44, 0xCB);

        public static readonly Guid MF_QUALITY_SERVICES = new Guid(0xB7E2BE11, 0x2F96, 0x4640, 0xB5, 0x2C, 0x28, 0x23, 0x65, 0xBD, 0xF1, 0x6C);

        public static readonly Guid IID_IMFWorkQueueServices = new Guid(0x35FE1BB8, 0xA3A9, 0x40FE, 0xBB, 0xEC, 0xEB, 0x56, 0x9C, 0x9C, 0xCC, 0xA3);

        public static readonly Guid MF_WORKQUEUE_SERVICES = new Guid(0x8E37D489, 0x41E0, 0x413A, 0x90, 0x68, 0x28, 0x7C, 0x88, 0x6D, 0x8D, 0xDA);

        public static readonly Guid IID_IMFWorkQueueServicesEx = new Guid(0x96BF961B, 0x40FE, 0x42F1, 0xBA, 0x9D, 0x32, 0x02, 0x38, 0xB4, 0x97, 0x00);

        public static readonly Guid IID_IMFQualityManager = new Guid(0x8D009D86, 0x5B9F, 0x4115, 0xB1, 0xFC, 0x9F, 0x80, 0xD5, 0x2A, 0xB8, 0xAB);

        public static readonly Guid MF_QUALITY_NOTIFY_PROCESSING_LATENCY = new Guid(0xF6B44AF8, 0x604D, 0x46FE, 0xA9, 0x5D, 0x45, 0x47, 0x9B, 0x10, 0xC9, 0xBC);

        public static readonly Guid MF_QUALITY_NOTIFY_SAMPLE_LAG = new Guid(0x30D15206, 0xED2A, 0x4760, 0xBE, 0x17, 0xEB, 0x4A, 0x9F, 0x12, 0x29, 0x5C);

        public static readonly Guid IID_IMFQualityAdvise = new Guid(0xEC15E2E9, 0xE36B, 0x4F7C, 0x87, 0x58, 0x77, 0xD4, 0x52, 0xEF, 0x4C, 0xE7);

        public static readonly Guid IID_IMFQualityAdvise2 = new Guid(0xF3706F0D, 0x8EA2, 0x4886, 0x80, 0x00, 0x71, 0x55, 0xE9, 0xEC, 0x2E, 0xAE);

        public static readonly Guid IID_IMFQualityAdviseLimits = new Guid(0xDFCD8E4D, 0x30B5, 0x4567, 0xAC, 0xAA, 0x8E, 0xB5, 0xB7, 0x85, 0x3D, 0xC9);

        public static readonly Guid IID_IMFRealTimeClient = new Guid(0x2347D60B, 0x3FB5, 0x480C, 0x88, 0x03, 0x8D, 0xF3, 0xAD, 0xCD, 0x3E, 0xF0);

        public static readonly Guid IID_IMFRealTimeClientEx = new Guid(0x03910848, 0xAB16, 0x4611, 0xB1, 0x00, 0x17, 0xB8, 0x8A, 0xE2, 0xF2, 0x48);

        public static readonly Guid IID_IMFSequencerSource = new Guid(0x197CD219, 0x19CB, 0x4DE1, 0xA6, 0x4C, 0xAC, 0xF2, 0xED, 0xCB, 0xE5, 0x9E);

        public static readonly Guid MF_TIME_FORMAT_SEGMENT_OFFSET = new Guid(0xC8B8BE77, 0x869C, 0x431D, 0x81, 0x2E, 0x16, 0x96, 0x93, 0xF6, 0x5A, 0x39);

        public static readonly Guid IID_IMFMediaSourceTopologyProvider = new Guid(0x0E1D6009, 0xC9F3, 0x442D, 0x8C, 0x51, 0xA4, 0x2D, 0x2D, 0x49, 0x45, 0x2F);

        public static readonly Guid IID_IMFMediaSourcePresentationProvider = new Guid(0x0E1D600A, 0xC9F3, 0x442D, 0x8C, 0x51, 0xA4, 0x2D, 0x2D, 0x49, 0x45, 0x2F);

        public static readonly Guid MF_SOURCE_PRESENTATION_PROVIDER_SERVICE = new Guid(0xE002AADC, 0xF4AF, 0x4EE5, 0x98, 0x47, 0x05, 0x3E, 0xDF, 0x84, 0x04, 0x26);

        public static readonly Guid IID_IMFTopologyNodeAttributeEditor = new Guid(0x676AA6DD, 0x238A, 0x410D, 0xBB, 0x99, 0x65, 0x66, 0x8D, 0x01, 0x60, 0x5A);

        public static readonly Guid MF_TOPONODE_ATTRIBUTE_EDITOR_SERVICE = new Guid(0x65656E1A, 0x077F, 0x4472, 0x83, 0xEF, 0x31, 0x6F, 0x11, 0xD5, 0x08, 0x7A);

        public static readonly Guid IID_IMFByteStreamBuffering = new Guid(0x6D66D782, 0x1D4F, 0x4DB7, 0x8C, 0x63, 0xCB, 0x8C, 0x77, 0xF1, 0xEF, 0x5E);

        public static readonly Guid IID_IMFByteStreamCacheControl = new Guid(0xF5042EA4, 0x7A96, 0x4A75, 0xAA, 0x7B, 0x2B, 0xE1, 0xEF, 0x7F, 0x88, 0xD5);

        public static readonly Guid IID_IMFByteStreamTimeSeek = new Guid(0x64976BFA, 0xFB61, 0x4041, 0x90, 0x69, 0x8C, 0x9A, 0x5F, 0x65, 0x9B, 0xEB);

        public static readonly Guid IID_IMFByteStreamCacheControl2 = new Guid(0x71CE469C, 0xF34B, 0x49EA, 0xA5, 0x6B, 0x2D, 0x2A, 0x10, 0xE5, 0x11, 0x49);

        public static readonly Guid IID_IMFNetCredential = new Guid(0x5B87EF6A, 0x7ED8, 0x434F, 0xBA, 0x0E, 0x18, 0x4F, 0xAC, 0x16, 0x28, 0xD1);

        public static readonly Guid IID_IMFNetCredentialManager = new Guid(0x5B87EF6B, 0x7ED8, 0x434F, 0xBA, 0x0E, 0x18, 0x4F, 0xAC, 0x16, 0x28, 0xD1);

        public static readonly Guid IID_IMFNetCredentialCache = new Guid(0x5B87EF6C, 0x7ED8, 0x434F, 0xBA, 0x0E, 0x18, 0x4F, 0xAC, 0x16, 0x28, 0xD1);

        public static readonly Guid IID_IMFSSLCertificateManager = new Guid(0x61F7D887, 0x1230, 0x4A8B, 0xAE, 0xBA, 0x8A, 0xD4, 0x34, 0xD1, 0xA6, 0x4D);

        public static readonly Guid MFNETSOURCE_SSLCERTIFICATE_MANAGER = new Guid(0x55E6CB27, 0xE69B, 0x4267, 0x94, 0x0C, 0x2D, 0x7E, 0xC5, 0xBB, 0x8A, 0x0F);

        public static readonly Guid IID_IMFNetResourceFilter = new Guid(0x091878A3, 0xBF11, 0x4A5C, 0xBC, 0x9F, 0x33, 0x99, 0x5B, 0x06, 0xEF, 0x2D);

        public static readonly Guid MFNETSOURCE_RESOURCE_FILTER = new Guid(0x815D0FF6, 0x265A, 0x4477, 0x9E, 0x46, 0x7B, 0x80, 0xAD, 0x80, 0xB5, 0xFB);

        public static readonly Guid IID_IMFSourceOpenMonitor = new Guid(0x059054B3, 0x027C, 0x494C, 0xA2, 0x7D, 0x91, 0x13, 0x29, 0x1C, 0xF8, 0x7F);

        public static readonly Guid IID_IMFNetProxyLocator = new Guid(0xE9CD0383, 0xA268, 0x4BB4, 0x82, 0xDE, 0x65, 0x8D, 0x53, 0x57, 0x4D, 0x41);

        public static readonly Guid IID_IMFNetProxyLocatorFactory = new Guid(0xE9CD0384, 0xA268, 0x4BB4, 0x82, 0xDE, 0x65, 0x8D, 0x53, 0x57, 0x4D, 0x41);

        public static readonly Guid IID_IMFSaveJob = new Guid(0xE9931663, 0x80BF, 0x4C6E, 0x98, 0xAF, 0x5D, 0xCF, 0x58, 0x74, 0x7D, 0x1F);

        public static readonly Guid MFNET_SAVEJOB_SERVICE = new Guid(0xB85A587F, 0x3D02, 0x4E52, 0x95, 0x65, 0x55, 0xD3, 0xEC, 0x1E, 0x7F, 0xF7);

        public static readonly Guid IID_IMFNetSchemeHandlerConfig = new Guid(0x7BE19E73, 0xC9BF, 0x468A, 0xAC, 0x5A, 0xA5, 0xE8, 0x65, 0x3B, 0xEC, 0x87);

        public static readonly Guid MFNETSOURCE_STATISTICS_SERVICE = new Guid(0x3CB1F275, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_STATISTICS = new Guid(0x3CB1F274, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_BUFFERINGTIME = new Guid(0x3CB1F276, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_ACCELERATEDSTREAMINGDURATION = new Guid(0x3CB1F277, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_MAXUDPACCELERATEDSTREAMINGDURATION = new Guid(0x4AAB2879, 0xBBE1, 0x4994, 0x9F, 0xF0, 0x54, 0x95, 0xBD, 0x25, 0x1, 0x29);

        public static readonly Guid MFNETSOURCE_MAXBUFFERTIMEMS = new Guid(0x408B24E6, 0x4038, 0x4401, 0xB5, 0xB2, 0xFE, 0x70, 0x1A, 0x9E, 0xBF, 0x10);

        public static readonly Guid MFNETSOURCE_CONNECTIONBANDWIDTH = new Guid(0x3CB1F278, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_CACHEENABLED = new Guid(0x3CB1F279, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_AUTORECONNECTLIMIT = new Guid(0x3CB1F27A, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_RESENDSENABLED = new Guid(0x3CB1F27B, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_THINNINGENABLED = new Guid(0x3CB1F27C, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PROTOCOL = new Guid(0x3CB1F27D, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_TRANSPORT = new Guid(0x3CB1F27E, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PREVIEWMODEENABLED = new Guid(0x3CB1F27F, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_CREDENTIAL_MANAGER = new Guid(0x3CB1F280, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PPBANDWIDTH = new Guid(0x3CB1F281, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_AUTORECONNECTPROGRESS = new Guid(0x3CB1F282, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PROXYLOCATORFACTORY = new Guid(0x3CB1F283, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_BROWSERUSERAGENT = new Guid(0x3CB1F28B, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_BROWSERWEBPAGE = new Guid(0x3CB1F28C, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PLAYERVERSION = new Guid(0x3CB1F28D, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PLAYERID = new Guid(0x3CB1F28E, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_HOSTEXE = new Guid(0x3CB1F28F, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_HOSTVERSION = new Guid(0x3CB1F291, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PLAYERUSERAGENT = new Guid(0x3CB1F292, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_CLIENTGUID = new Guid(0x60A2C4A6, 0xF197, 0x4C14, 0xA5, 0xBF, 0x88, 0x83, 0xD, 0x24, 0x58, 0xAF);

        public static readonly Guid MFNETSOURCE_LOGURL = new Guid(0x3CB1F293, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_ENABLE_UDP = new Guid(0x3CB1F294, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_ENABLE_TCP = new Guid(0x3CB1F295, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_ENABLE_MSB = new Guid(0x3CB1F296, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_ENABLE_RTSP = new Guid(0x3CB1F298, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_ENABLE_HTTP = new Guid(0x3CB1F299, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_ENABLE_STREAMING = new Guid(0x3CB1F29C, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_ENABLE_DOWNLOAD = new Guid(0x3CB1F29D, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_ENABLE_PRIVATEMODE = new Guid(0x824779D8, 0xF18B, 0x4405, 0x8C, 0xF1, 0x46, 0x4F, 0xB5, 0xAA, 0x8F, 0x71);

        public static readonly Guid MFNETSOURCE_UDP_PORT_RANGE = new Guid(0x3CB1F29A, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PROXYINFO = new Guid(0x3CB1F29B, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_DRMNET_LICENSE_REPRESENTATION = new Guid(0x47EAE1BD, 0xBDFE, 0x42E2, 0x82, 0xF3, 0x54, 0xA4, 0x8C, 0x17, 0x96, 0x2D);

        public static readonly Guid MFNETSOURCE_PROXYSETTINGS = new Guid(0x3CB1F287, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PROXYHOSTNAME = new Guid(0x3CB1F284, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PROXYPORT = new Guid(0x3CB1F288, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PROXYEXCEPTIONLIST = new Guid(0x3CB1F285, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PROXYBYPASSFORLOCAL = new Guid(0x3CB1F286, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_PROXYRERUNAUTODETECTION = new Guid(0x3CB1F289, 0x0505, 0x4C5D, 0xAE, 0x71, 0x0A, 0x55, 0x63, 0x44, 0xEF, 0xA1);

        public static readonly Guid MFNETSOURCE_STREAM_LANGUAGE = new Guid(0x9AB44318, 0xF7CD, 0x4F2D, 0x8D, 0x6D, 0xFA, 0x35, 0xB4, 0x92, 0xCE, 0xCB);

        public static readonly Guid MFNETSOURCE_LOGPARAMS = new Guid(0x64936AE8, 0x9418, 0x453A, 0x8C, 0xDA, 0x3E, 0xA, 0x66, 0x8B, 0x35, 0x3B);

        public static readonly Guid MFNETSOURCE_PEERMANAGER = new Guid(0x48B29ADB, 0xFEBF, 0x45EE, 0xA9, 0xBF, 0xEF, 0xB8, 0x1C, 0x49, 0x2E, 0xFC);

        public static readonly Guid MFNETSOURCE_FRIENDLYNAME = new Guid(0x5B2A7757, 0xBC6B, 0x447E, 0xAA, 0x06, 0x0D, 0xDA, 0x1C, 0x64, 0x6E, 0x2F);

        public static readonly Guid IID_IMFSchemeHandler = new Guid(0x6D4C7B74, 0x52A0, 0x4BB7, 0xB0, 0xDB, 0x55, 0xF2, 0x9F, 0x47, 0xA6, 0x68);

        public static readonly Guid MF_BYTESTREAMHANDLER_ACCEPTS_SHARE_WRITE = new Guid(0xA6E1F733, 0x3001, 0x4915, 0x81, 0x50, 0x15, 0x58, 0xA2, 0x18, 0xE, 0xC8);

        public static readonly Guid IID_IMFByteStreamHandler = new Guid(0xBB420AA4, 0x765B, 0x4A1F, 0x91, 0xFE, 0xD6, 0xA8, 0xA1, 0x43, 0x92, 0x4C);

        public static readonly Guid MF_BYTESTREAM_SERVICE = new Guid(0xAB025E2B, 0x16D9, 0x4180, 0xA1, 0x27, 0xBA, 0x6C, 0x70, 0x15, 0x61, 0x61);

        public static readonly Guid IID_IMFTrustedInput = new Guid(0x542612C4, 0xA1B8, 0x4632, 0xB5, 0x21, 0xDE, 0x11, 0xEA, 0x64, 0xA0, 0xB0);

        public static readonly Guid MF_MEDIA_PROTECTION_MANAGER_PROPERTIES = new Guid(0x38BD81A9, 0xACEA, 0x4C73, 0x89, 0xB2, 0x55, 0x32, 0xC0, 0xAE, 0xCA, 0x79);

        public static readonly Guid IID_IMFInputTrustAuthority = new Guid(0xD19F8E98, 0xB126, 0x4446, 0x89, 0x0C, 0x5D, 0xCB, 0x7A, 0xD7, 0x14, 0x53);

        public static readonly Guid IID_IMFTrustedOutput = new Guid(0xD19F8E95, 0xB126, 0x4446, 0x89, 0x0C, 0x5D, 0xCB, 0x7A, 0xD7, 0x14, 0x53);

        public static readonly Guid IID_IMFOutputTrustAuthority = new Guid(0xD19F8E94, 0xB126, 0x4446, 0x89, 0x0C, 0x5D, 0xCB, 0x7A, 0xD7, 0x14, 0x53);

        public static readonly Guid IID_IMFOutputPolicy = new Guid(0x7F00F10A, 0xDAED, 0x41AF, 0xAB, 0x26, 0x5F, 0xDF, 0xA4, 0xDF, 0xBA, 0x3C);

        public static readonly Guid MFCONNECTOR_SPDIF = new Guid(0xB94A712, 0xAD3E, 0x4CEE, 0x83, 0xCE, 0xCE, 0x32, 0xE3, 0xDB, 0x65, 0x22);

        public static readonly Guid MFCONNECTOR_UNKNOWN = new Guid(0xAC3AEF5C, 0xCE43, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_PCI = new Guid(0xAC3AEF5D, 0xCE43, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_PCIX = new Guid(0xAC3AEF5E, 0xCE43, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_PCI_EXPRESS = new Guid(0xAC3AEF5F, 0xCE43, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_AGP = new Guid(0xAC3AEF60, 0xCE43, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_VGA = new Guid(0x57CD5968, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_SVIDEO = new Guid(0x57CD5969, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_COMPOSITE = new Guid(0x57CD596A, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_COMPONENT = new Guid(0x57CD596B, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_DVI = new Guid(0x57CD596C, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_HDMI = new Guid(0x57CD596D, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_LVDS = new Guid(0x57CD596E, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_D_JPN = new Guid(0x57CD5970, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_SDI = new Guid(0x57CD5971, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_DISPLAYPORT_EXTERNAL = new Guid(0x57CD5972, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_DISPLAYPORT_EMBEDDED = new Guid(0x57CD5973, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_UDI_EXTERNAL = new Guid(0x57CD5974, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_UDI_EMBEDDED = new Guid(0x57CD5975, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_MIRACAST = new Guid(0x57CD5977, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_TRANSPORT_AGNOSTIC_DIGITAL_MODE_A = new Guid(0x57CD5978, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MFCONNECTOR_TRANSPORT_AGNOSTIC_DIGITAL_MODE_B = new Guid(0x57CD5979, 0xCE47, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid MF_POLICY_ID = new Guid(0xB160C24D, 0xC059, 0x48F1, 0xA9, 0x1, 0x9E, 0xE2, 0x98, 0xA9, 0xA8, 0xC3);

        public static readonly Guid IID_IMFOutputSchema = new Guid(0x7BE0FC5B, 0xABD9, 0x44FB, 0xA5, 0xC8, 0xF5, 0x01, 0x36, 0xE7, 0x15, 0x99);

        public static readonly Guid MFPROTECTION_DISABLE = new Guid(0x8CC6D81B, 0xFEC6, 0x4D8F, 0x96, 0x4B, 0xCF, 0xBA, 0x0B, 0x0D, 0xAD, 0x0D);

        public static readonly Guid MFPROTECTION_CONSTRICTVIDEO = new Guid(0x193370CE, 0xC5E4, 0x4C3A, 0x8A, 0x66, 0x69, 0x59, 0xB4, 0xDA, 0x44, 0x42);

        public static readonly Guid MFPROTECTION_CONSTRICTVIDEO_NOOPM = new Guid(0xA580E8CD, 0xC247, 0x4957, 0xB9, 0x83, 0x3C, 0x2E, 0xEB, 0xD1, 0xFF, 0x59);

        public static readonly Guid MFPROTECTION_CONSTRICTAUDIO = new Guid(0xFFC99B44, 0xDF48, 0x4E16, 0x8E, 0x66, 0x09, 0x68, 0x92, 0xC1, 0x57, 0x8A);

        public static readonly Guid MFPROTECTION_TRUSTEDAUDIODRIVERS = new Guid(0x65BDF3D2, 0x0168, 0x4816, 0xA5, 0x33, 0x55, 0xD4, 0x7B, 0x02, 0x71, 0x01);

        public static readonly Guid MFPROTECTION_HDCP = new Guid(0xAE7CC03D, 0xC828, 0x4021, 0xAC, 0xB7, 0xD5, 0x78, 0xD2, 0x7A, 0xAF, 0x13);

        public static readonly Guid MFPROTECTION_CGMSA = new Guid(0xE57E69E9, 0x226B, 0x4D31, 0xB4, 0xE3, 0xD3, 0xDB, 0x00, 0x87, 0x36, 0xDD);

        public static readonly Guid MFPROTECTION_ACP = new Guid(0xC3FD11C6, 0xF8B7, 0x4D20, 0xB0, 0x08, 0x1D, 0xB1, 0x7D, 0x61, 0xF2, 0xDA);

        public static readonly Guid MFPROTECTION_WMDRMOTA = new Guid(0xA267A6A1, 0x362E, 0x47D0, 0x88, 0x05, 0x46, 0x28, 0x59, 0x8A, 0x23, 0xE4);

        public static readonly Guid MFPROTECTION_FFT = new Guid(0x462A56B2, 0x2866, 0x4BB6, 0x98, 0x0D, 0x6D, 0x8D, 0x9E, 0xDB, 0x1A, 0x8C);

        public static readonly Guid MFPROTECTION_PROTECTED_SURFACE = new Guid(0x4F5D9566, 0xE742, 0x4A25, 0x8D, 0x1F, 0xD2, 0x87, 0xB5, 0xFA, 0x0A, 0xDE);

        public static readonly Guid MFPROTECTION_DISABLE_SCREEN_SCRAPE = new Guid(0xA21179A4, 0xB7CD, 0x40D8, 0x96, 0x14, 0x8E, 0xF2, 0x37, 0x1B, 0xA7, 0x8D);

        public static readonly Guid MFPROTECTION_VIDEO_FRAMES = new Guid(0x36A59CBC, 0x7401, 0x4A8C, 0xBC, 0x20, 0x46, 0xA7, 0xC9, 0xE5, 0x97, 0xF0);

        public static readonly Guid MFPROTECTION_HARDWARE = new Guid(0x4EE7F0C1, 0x9ED7, 0x424F, 0xB6, 0xBE, 0x99, 0x6B, 0x33, 0x52, 0x88, 0x56);

        public static readonly Guid MFPROTECTION_HDCP_WITH_TYPE_ENFORCEMENT = new Guid(0xA4A585E8, 0xED60, 0x442D, 0x81, 0x4D, 0xDB, 0x4D, 0x42, 0x20, 0xA0, 0x6D);

        public static readonly Guid MFPROTECTIONATTRIBUTE_BEST_EFFORT = new Guid(0xC8E06331, 0x75F0, 0x4EC1, 0x8E, 0x77, 0x17, 0x57, 0x8F, 0x77, 0x3B, 0x46);

        public static readonly Guid MFPROTECTIONATTRIBUTE_FAIL_OVER = new Guid(0x8536ABC5, 0x38F1, 0x4151, 0x9C, 0xCE, 0xF5, 0x5D, 0x94, 0x12, 0x29, 0xAC);

        public static readonly Guid MFPROTECTION_GRAPHICS_TRANSFER_AES_ENCRYPTION = new Guid(0xC873DE64, 0xD8A5, 0x49E6, 0x88, 0xBB, 0xFB, 0x96, 0x3F, 0xD3, 0xD4, 0xCE);

        public static readonly Guid MFPROTECTIONATTRIBUTE_CONSTRICTVIDEO_IMAGESIZE = new Guid(0x8476FC, 0x4B58, 0x4D80, 0xA7, 0x90, 0xE7, 0x29, 0x76, 0x73, 0x16, 0x1D);

        public static readonly Guid MFPROTECTIONATTRIBUTE_HDCP_SRM = new Guid(0x6F302107, 0x3477, 0x4468, 0x8A, 0x8, 0xEE, 0xF9, 0xDB, 0x10, 0xE2, 0xF);

        public static readonly Guid IID_IMFSecureChannel = new Guid(0xD0AE555D, 0x3B12, 0x4D97, 0xB0, 0x60, 0x09, 0x90, 0xBC, 0x5A, 0xEB, 0x67);

        public static readonly Guid MF_SampleProtectionSalt = new Guid(0x5403DEEE, 0xB9EE, 0x438F, 0xAA, 0x83, 0x38, 0x4, 0x99, 0x7E, 0x56, 0x9D);

        public static readonly Guid IID_IMFSampleProtection = new Guid(0x8E36395F, 0xC7B9, 0x43C4, 0xA5, 0x4D, 0x51, 0x2B, 0x4A, 0xF6, 0x3C, 0x95);

        public static readonly Guid IID_IMFMediaSinkPreroll = new Guid(0x5DFD4B2A, 0x7674, 0x4110, 0xA4, 0xE6, 0x8A, 0x68, 0xFD, 0x5F, 0x36, 0x88);

        public static readonly Guid IID_IMFFinalizableMediaSink = new Guid(0xEAECB74A, 0x9A50, 0x42CE, 0x95, 0x41, 0x6A, 0x7F, 0x57, 0xAA, 0x4A, 0xD7);

        public static readonly Guid IID_IMFStreamingSinkConfig = new Guid(0x9DB7AA41, 0x3CC5, 0x40D4, 0x85, 0x09, 0x55, 0x58, 0x04, 0xAD, 0x34, 0xCC);

        public static readonly Guid IID_IMFRemoteProxy = new Guid(0x994E23AD, 0x1CC2, 0x493C, 0xB9, 0xFA, 0x46, 0xF1, 0xCB, 0x04, 0x0F, 0xA4);

        public static readonly Guid MF_REMOTE_PROXY = new Guid(0x2F00C90E, 0xD2CF, 0x4278, 0x8B, 0x6A, 0xD0, 0x77, 0xFA, 0xC3, 0xA2, 0x5F);

        public static readonly Guid IID_IMFObjectReferenceStream = new Guid(0x09EF5BE3, 0xC8A7, 0x469E, 0x8B, 0x70, 0x73, 0xBF, 0x25, 0xBB, 0x19, 0x3F);

        public static readonly Guid CLSID_CreateMediaExtensionObject = new Guid(0xEF65A54D, 0x0788, 0x45B8, 0x8B, 0x14, 0xBC, 0x0F, 0x6A, 0x6B, 0x51, 0x37);

        public static readonly Guid IID_IMFPMPHost = new Guid(0xF70CA1A9, 0xFDC7, 0x4782, 0xB9, 0x94, 0xAD, 0xFF, 0xB1, 0xC9, 0x86, 0x06);

        public static readonly Guid IID_IMFPMPClient = new Guid(0x6C4E655D, 0xEAD8, 0x4421, 0xB6, 0xB9, 0x54, 0xDC, 0xDB, 0xBD, 0xF8, 0x20);

        public static readonly Guid IID_IMFPMPServer = new Guid(0x994E23AF, 0x1CC2, 0x493C, 0xB9, 0xFA, 0x46, 0xF1, 0xCB, 0x04, 0x0F, 0xA4);

        public static readonly Guid IID_IMFRemoteDesktopPlugin = new Guid(0x1CDE6309, 0xCAE0, 0x4940, 0x90, 0x7E, 0xC1, 0xEC, 0x9C, 0x3D, 0x1D, 0x4A);

        public static readonly Guid IID_IMFSAMIStyle = new Guid(0xA7E025DD, 0x5303, 0x4A62, 0x89, 0xD6, 0xE7, 0x47, 0xE1, 0xEF, 0xAC, 0x73);

        public static readonly Guid MF_SAMI_SERVICE = new Guid(0x49A89AE7, 0xB4D9, 0x4EF2, 0xAA, 0x5C, 0xF6, 0x5A, 0x3E, 0x5, 0xAE, 0x4E);

        public static readonly Guid MF_PD_SAMI_STYLELIST = new Guid(0xE0B73C7F, 0x486D, 0x484E, 0x98, 0x72, 0x4D, 0xE5, 0x19, 0x2A, 0x7B, 0xF8);

        public static readonly Guid MF_SD_SAMI_LANGUAGE = new Guid(0x36FCB98A, 0x6CD0, 0x44CB, 0xAC, 0xB9, 0xA8, 0xF5, 0x60, 0xD, 0xD0, 0xBB);

        public static readonly Guid IID_IMFTranscodeProfile = new Guid(0x4ADFDBA3, 0x7AB0, 0x4953, 0xA6, 0x2B, 0x46, 0x1E, 0x7F, 0xF3, 0xDA, 0x1E);

        public static readonly Guid MF_TRANSCODE_CONTAINERTYPE = new Guid(0x150FF23F, 0x4ABC, 0x478B, 0xAC, 0x4F, 0xE1, 0x91, 0x6F, 0xBA, 0x1C, 0xCA);

        public static readonly Guid MFTranscodeContainerType_ASF = new Guid(0x430F6F6E, 0xB6BF, 0x4FC1, 0xA0, 0xBD, 0x9E, 0xE4, 0x6E, 0xEE, 0x2A, 0xFB);

        public static readonly Guid MFTranscodeContainerType_MPEG4 = new Guid(0xDC6CD05D, 0xB9D0, 0x40EF, 0xBD, 0x35, 0xFA, 0x62, 0x2C, 0x1A, 0xB2, 0x8A);

        public static readonly Guid MFTranscodeContainerType_MP3 = new Guid(0xE438B912, 0x83F1, 0x4DE6, 0x9E, 0x3A, 0x9F, 0xFB, 0xC6, 0xDD, 0x24, 0xD1);

        public static readonly Guid MFTranscodeContainerType_FLAC = new Guid(0x31344AA3, 0x05A9, 0x42B5, 0x90, 0x1B, 0x8E, 0x9D, 0x42, 0x57, 0xF7, 0x5E);

        public static readonly Guid MFTranscodeContainerType_3GP = new Guid(0x34C50167, 0x4472, 0x4F34, 0x9E, 0xA0, 0xC4, 0x9F, 0xBA, 0xCF, 0x03, 0x7D);

        public static readonly Guid MFTranscodeContainerType_AC3 = new Guid(0x6D8D91C3, 0x8C91, 0x4ED1, 0x87, 0x42, 0x8C, 0x34, 0x7D, 0x5B, 0x44, 0xD0);

        public static readonly Guid MFTranscodeContainerType_ADTS = new Guid(0x132FD27D, 0x0F02, 0x43DE, 0xA3, 0x01, 0x38, 0xFB, 0xBB, 0xB3, 0x83, 0x4E);

        public static readonly Guid MFTranscodeContainerType_MPEG2 = new Guid(0xBFC2DBF9, 0x7BB4, 0x4F8F, 0xAF, 0xDE, 0xE1, 0x12, 0xC4, 0x4B, 0xA8, 0x82);

        public static readonly Guid MFTranscodeContainerType_WAVE = new Guid(0x64C3453C, 0x0F26, 0x4741, 0xBE, 0x63, 0x87, 0xBD, 0xF8, 0xBB, 0x93, 0x5B);

        public static readonly Guid MFTranscodeContainerType_AVI = new Guid(0x7EDFE8AF, 0x402F, 0x4D76, 0xA3, 0x3C, 0x61, 0x9F, 0xD1, 0x57, 0xD0, 0xF1);

        public static readonly Guid MFTranscodeContainerType_FMPEG4 = new Guid(0x9BA876F1, 0x419F, 0x4B77, 0xA1, 0xE0, 0x35, 0x95, 0x9D, 0x9D, 0x40, 0x4);

        public static readonly Guid MFTranscodeContainerType_AMR = new Guid(0x25D5AD3, 0x621A, 0x475B, 0x96, 0x4D, 0x66, 0xB1, 0xC8, 0x24, 0xF0, 0x79);

        public static readonly Guid MF_TRANSCODE_SKIP_METADATA_TRANSFER = new Guid(0x4E4469EF, 0xB571, 0x4959, 0x8F, 0x83, 0x3D, 0xCF, 0xBA, 0x33, 0xA3, 0x93);

        public static readonly Guid MF_TRANSCODE_TOPOLOGYMODE = new Guid(0x3E3DF610, 0x394A, 0x40B2, 0x9D, 0xEA, 0x3B, 0xAB, 0x65, 0xB, 0xEB, 0xF2);

        public static readonly Guid MF_TRANSCODE_ADJUST_PROFILE = new Guid(0x9C37C21B, 0x60F, 0x487C, 0xA6, 0x90, 0x80, 0xD7, 0xF5, 0xD, 0x1C, 0x72);

        public static readonly Guid MF_TRANSCODE_ENCODINGPROFILE = new Guid(0x6947787C, 0xF508, 0x4EA9, 0xB1, 0xE9, 0xA1, 0xFE, 0x3A, 0x49, 0xFB, 0xC9);

        public static readonly Guid MF_TRANSCODE_QUALITYVSSPEED = new Guid(0x98332DF8, 0x03CD, 0x476B, 0x89, 0xFA, 0x3F, 0x9E, 0x44, 0x2D, 0xEC, 0x9F);

        public static readonly Guid MF_TRANSCODE_DONOT_INSERT_ENCODER = new Guid(0xF45AA7CE, 0xAB24, 0x4012, 0xA1, 0x1B, 0xDC, 0x82, 0x20, 0x20, 0x14, 0x10);

        public static readonly Guid MF_VIDEO_PROCESSOR_ALGORITHM = new Guid(0x4A0A1E1F, 0x272C, 0x4FB6, 0x9E, 0xB1, 0xDB, 0x33, 0xC, 0xBC, 0x97, 0xCA);

        public static readonly Guid MF_XVP_DISABLE_FRC = new Guid(0x2C0AFA19, 0x7A97, 0x4D5A, 0x9E, 0xE8, 0x16, 0xD4, 0xFC, 0x51, 0x8D, 0x8C);

        public static readonly Guid MF_XVP_CALLER_ALLOCATES_OUTPUT = new Guid(0x4A2CABC, 0xCAB, 0x40B1, 0xA1, 0xB9, 0x75, 0xBC, 0x36, 0x58, 0xF0, 0x0);

        public static readonly Guid IID_IMFTranscodeSinkInfoProvider = new Guid(0x8CFFCD2E, 0x5A03, 0x4A3A, 0xAF, 0xF7, 0xED, 0xCD, 0x10, 0x7C, 0x62, 0x0E);

        public static readonly Guid IID_IMFFieldOfUseMFTUnlock = new Guid(0x508E71D3, 0xEC66, 0x4FC3, 0x87, 0x75, 0xB4, 0xB9, 0xED, 0x6B, 0xA8, 0x47);

        public static readonly Guid MF_LOCAL_MFT_REGISTRATION_SERVICE = new Guid(0xDDF5CF9C, 0x4506, 0x45AA, 0xAB, 0xF0, 0x6D, 0x5D, 0x94, 0xDD, 0x1B, 0x4A);

        public static readonly Guid IID_IMFLocalMFTRegistration = new Guid(0x149C4D73, 0xB4BE, 0x4F8D, 0x8B, 0x87, 0x07, 0x9E, 0x92, 0x6B, 0x6A, 0xDD);

        public static readonly Guid IID_IMFCapturePhotoConfirmation = new Guid(0x19F68549, 0xCA8A, 0x4706, 0xA4, 0xEF, 0x48, 0x1D, 0xBC, 0x95, 0xE1, 0x2C);

        public static readonly Guid IID_IMFPMPHostApp = new Guid(0x84D2054A, 0x3AA1, 0x4728, 0xA3, 0xB0, 0x44, 0x0A, 0x41, 0x8C, 0xF4, 0x9C);

        public static readonly Guid IID_IMFPMPClientApp = new Guid(0xC004F646, 0xBE2C, 0x48F3, 0x93, 0xA2, 0xA0, 0x98, 0x3E, 0xBA, 0x11, 0x08);

        public static readonly Guid IID_IMFMediaStreamSourceSampleRequest = new Guid(0x380B9AF9, 0xA85B, 0x4E78, 0xA2, 0xAF, 0xEA, 0x5C, 0xE6, 0x45, 0xC6, 0xB4);

        public static readonly Guid IID_IMFTrackedSample = new Guid(0x245BF8E9, 0x0755, 0x40F7, 0x88, 0xA5, 0xAE, 0x0F, 0x18, 0xD5, 0x5E, 0x17);

        public static readonly Guid MF_WRAPPED_BUFFER_SERVICE = new Guid(0xAB544072, 0xC269, 0x4EBC, 0xA5, 0x52, 0x1C, 0x3B, 0x32, 0xBE, 0xD5, 0xCA);

        public static readonly Guid MF_WRAPPED_SAMPLE_SERVICE = new Guid(0x31F52BF2, 0xD03E, 0x4048, 0x80, 0xD0, 0x9C, 0x10, 0x46, 0xD8, 0x7C, 0x61);

        public static readonly Guid MF_WRAPPED_OBJECT = new Guid(0x2B182C4C, 0xD6AC, 0x49F4, 0x89, 0x15, 0xF7, 0x18, 0x87, 0xDB, 0x70, 0xCD);

        public static readonly Guid CLSID_HttpSchemePlugin = new Guid(0x44CB442B, 0x9DA9, 0x49DF, 0xB3, 0xFD, 0x2, 0x37, 0x77, 0xB1, 0x6E, 0x50);

        public static readonly Guid CLSID_UrlmonSchemePlugin = new Guid(0x9EC4B4F9, 0x3029, 0x45AD, 0x94, 0x7B, 0x34, 0x4D, 0xE2, 0xA2, 0x49, 0xE2);

        public static readonly Guid CLSID_NetSchemePlugin = new Guid(0xE9F4EBAB, 0xD97B, 0x463E, 0xA2, 0xB1, 0xC5, 0x4E, 0xE3, 0xF9, 0x41, 0x4D);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE = new Guid(0xC60AC5FE, 0x252A, 0x478F, 0xA0, 0xEF, 0xBC, 0x8F, 0xA5, 0xF7, 0xCA, 0xD3);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_HW_SOURCE = new Guid(0xDE7046BA, 0x54D6, 0x4487, 0xA2, 0xA4, 0xEC, 0x7C, 0xD, 0x1B, 0xD1, 0x63);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_FRIENDLY_NAME = new Guid(0x60D0E559, 0x52F8, 0x4FA2, 0xBB, 0xCE, 0xAC, 0xDB, 0x34, 0xA8, 0xEC, 0x1);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE = new Guid(0x56A819CA, 0xC78, 0x4DE4, 0xA0, 0xA7, 0x3D, 0xDA, 0xBA, 0xF, 0x24, 0xD4);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_CATEGORY = new Guid(0x77F0AE69, 0xC3BD, 0x4509, 0x94, 0x1D, 0x46, 0x7E, 0x4D, 0x24, 0x89, 0x9E);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_SYMBOLIC_LINK = new Guid(0x58F0AAD8, 0x22BF, 0x4F8A, 0xBB, 0x3D, 0xD2, 0xC4, 0x97, 0x8C, 0x6E, 0x2F);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_SYMBOLIC_LINK = new Guid(0x98D24B5E, 0x5930, 0x4614, 0xB5, 0xA1, 0xF6, 0x0, 0xF9, 0x35, 0x5A, 0x78);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_MAX_BUFFERS = new Guid(0x7DD9B730, 0x4F2D, 0x41D5, 0x8F, 0x95, 0xC, 0xC9, 0xA9, 0x12, 0xBA, 0x26);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ENDPOINT_ID = new Guid(0x30DA9258, 0xFEB9, 0x47A7, 0xA4, 0x53, 0x76, 0x3A, 0x7A, 0x8E, 0x1C, 0x5F);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ROLE = new Guid(0xBC9D118E, 0x8C67, 0x4A18, 0x85, 0xD4, 0x12, 0xD3, 0x0, 0x40, 0x5, 0x52);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_PROVIDER_DEVICE_ID = new Guid(0x36689D42, 0xA06C, 0x40AE, 0x84, 0xCF, 0xF5, 0xA0, 0x34, 0x6, 0x7C, 0xC4);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_XADDRESS = new Guid(0xBCA0BE52, 0xC327, 0x44C7, 0x9B, 0x7D, 0x7F, 0xA8, 0xD9, 0xB5, 0xBC, 0xDA);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_STREAM_URL = new Guid(0x9D7B40D2, 0x3617, 0x4043, 0x93, 0xE3, 0x8D, 0x6D, 0xA9, 0xBB, 0x34, 0x92);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_USERNAME = new Guid(0x5D01ADD, 0x949F, 0x46EB, 0xBC, 0x8E, 0x8B, 0xD, 0x2B, 0x32, 0xD7, 0x9D);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_PASSWORD = new Guid(0xA0FD7E16, 0x42D9, 0x49DF, 0x84, 0xC0, 0xE8, 0x2C, 0x5E, 0xAB, 0x88, 0x74);

        public static readonly Guid CLSID_FrameServerNetworkCameraSource = new Guid(0x7A213AA7, 0x866F, 0x414A, 0x8C, 0x1A, 0x27, 0x5C, 0x72, 0x83, 0xA3, 0x95);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_GUID = new Guid(0x14DD9A1C, 0x7CFF, 0x41BE, 0xB1, 0xB9, 0xBA, 0x1A, 0xC6, 0xEC, 0xB5, 0x71);

        public static readonly Guid MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_GUID = new Guid(0x8AC3587A, 0x4AE7, 0x42D8, 0x99, 0xE0, 0x0A, 0x60, 0x13, 0xEE, 0xF9, 0x0F);

        public static readonly Guid MF_DEVICESTREAM_IMAGE_STREAM = new Guid(0xA7FFB865, 0xE7B2, 0x43B0, 0x9F, 0x6F, 0x9A, 0xF2, 0xA0, 0xE5, 0xF, 0xC0);

        public static readonly Guid MF_DEVICESTREAM_INDEPENDENT_IMAGE_STREAM = new Guid(0x3EEEC7E, 0xD605, 0x4576, 0x8B, 0x29, 0x65, 0x80, 0xB4, 0x90, 0xD7, 0xD3);

        public static readonly Guid MF_DEVICESTREAM_STREAM_ID = new Guid(0x11BD5120, 0xD124, 0x446B, 0x88, 0xE6, 0x17, 0x6, 0x2, 0x57, 0xFF, 0xF9);

        public static readonly Guid MF_DEVICESTREAM_STREAM_CATEGORY = new Guid(0x2939E7B8, 0xA62E, 0x4579, 0xB6, 0x74, 0xD4, 0x7, 0x3D, 0xFA, 0xBB, 0xBA);

        public static readonly Guid MF_DEVICESTREAM_FRAMESERVER_SHARED = new Guid(0x1CB378E9, 0xB279, 0x41D4, 0xAF, 0x97, 0x34, 0xA2, 0x43, 0xE6, 0x83, 0x20);

        public static readonly Guid MF_DEVICESTREAM_TRANSFORM_STREAM_ID = new Guid(0xE63937B7, 0xDAAF, 0x4D49, 0x81, 0x5F, 0xD8, 0x26, 0xF8, 0xAD, 0x31, 0xE7);

        public static readonly Guid MF_DEVICESTREAM_EXTENSION_PLUGIN_CLSID = new Guid(0x048E6558, 0x60C4, 0x4173, 0xBD, 0x5B, 0x6A, 0x3C, 0xA2, 0x89, 0x6A, 0xEE);

        public static readonly Guid MF_DEVICEMFT_EXTENSION_PLUGIN_CLSID = new Guid(0x844DBAE, 0x34FA, 0x48A0, 0xA7, 0x83, 0x8E, 0x69, 0x6F, 0xB1, 0xC9, 0xA8);

        public static readonly Guid MF_DEVICESTREAM_EXTENSION_PLUGIN_CONNECTION_POINT = new Guid(0x37F9375C, 0xE664, 0x4EA4, 0xAA, 0xE4, 0xCB, 0x6D, 0x1D, 0xAC, 0xA1, 0xF4);

        public static readonly Guid MF_DEVICESTREAM_TAKEPHOTO_TRIGGER = new Guid(0x1D180E34, 0x538C, 0x4FBB, 0xA7, 0x5A, 0x85, 0x9A, 0xF7, 0xD2, 0x61, 0xA6);

        public static readonly Guid MF_DEVICESTREAM_MAX_FRAME_BUFFERS = new Guid(0x1684CEBE, 0x3175, 0x4985, 0x88, 0x2C, 0x0E, 0xFD, 0x3E, 0x8A, 0xC1, 0x1E);

        public static readonly Guid MF_DEVICEMFT_CONNECTED_FILTER_KSCONTROL = new Guid(0x6A2C4FA6, 0xD179, 0x41CD, 0x95, 0x23, 0x82, 0x23, 0x71, 0xEA, 0x40, 0xE5);

        public static readonly Guid MF_DEVICEMFT_CONNECTED_PIN_KSCONTROL = new Guid(0xE63310F7, 0xB244, 0x4EF8, 0x9A, 0x7D, 0x24, 0xC7, 0x4E, 0x32, 0xEB, 0xD0);

        public static readonly Guid MF_DEVICE_THERMAL_STATE_CHANGED = new Guid(0x70CCD0AF, 0xFC9F, 0x4DEB, 0xA8, 0x75, 0x9F, 0xEC, 0xD1, 0x6C, 0x5B, 0xD4);

        public static readonly Guid MFSampleExtension_DeviceTimestamp = new Guid(0x8F3E35E7, 0x2DCD, 0x4887, 0x86, 0x22, 0x2A, 0x58, 0xBA, 0xA6, 0x52, 0xB0);

        public static readonly Guid MFSampleExtension_Spatial_CameraViewTransform = new Guid(0x4E251FA4, 0x830F, 0x4770, 0x85, 0x9A, 0x4B, 0x8D, 0x99, 0xAA, 0x80, 0x9B);

        public static readonly Guid MFSampleExtension_Spatial_CameraCoordinateSystem = new Guid(0x9D13C82F, 0x2199, 0x4E67, 0x91, 0xCD, 0xD1, 0xA4, 0x18, 0x1F, 0x25, 0x34);

        public static readonly Guid MFSampleExtension_Spatial_CameraProjectionTransform = new Guid(0x47F9FCB5, 0x2A02, 0x4F26, 0xA4, 0x77, 0x79, 0x2F, 0xDF, 0x95, 0x88, 0x6A);

        public static readonly Guid IID_IMFProtectedEnvironmentAccess = new Guid(0xEF5DC845, 0xF0D9, 0x4EC9, 0xB0, 0x0C, 0xCB, 0x51, 0x83, 0xD3, 0x84, 0x34);

        public static readonly Guid IID_IMFSignedLibrary = new Guid(0x4A724BCA, 0xFF6A, 0x4C07, 0x8E, 0x0D, 0x7A, 0x35, 0x84, 0x21, 0xCF, 0x06);

        public static readonly Guid IID_IMFSystemId = new Guid(0xFFF4AF3A, 0x1FC1, 0x4EF9, 0xA2, 0x9B, 0xD2, 0x6C, 0x49, 0xE2, 0xF3, 0x1A);

        public static readonly Guid CLSID_MPEG2ByteStreamPlugin = new Guid(0x40871C59, 0xAB40, 0x471F, 0x8D, 0xC3, 0x1F, 0x25, 0x9D, 0x86, 0x24, 0x79);

        public static readonly Guid MF_MEDIASOURCE_SERVICE = new Guid(0xF09992F7, 0x9FBA, 0x4C4A, 0xA3, 0x7F, 0x8C, 0x47, 0xB4, 0xE1, 0xDF, 0xE7);

        public static readonly Guid MF_ACCESS_CONTROLLED_MEDIASOURCE_SERVICE = new Guid(0x14A5031, 0x2F05, 0x4C6A, 0x9F, 0x9C, 0x7D, 0xD, 0xC4, 0xED, 0xA5, 0xF4);

        public static readonly Guid IID_IMFContentProtectionDevice = new Guid(0xE6257174, 0xA060, 0x4C9A, 0xA0, 0x88, 0x3B, 0x1B, 0x47, 0x1C, 0xAD, 0x28);

        public static readonly Guid IID_IMFContentDecryptorContext = new Guid(0x7EC4B1BD, 0x43FB, 0x4763, 0x85, 0xD2, 0x64, 0xFC, 0xB5, 0xC5, 0xF4, 0xCB);

        public static readonly Guid MF_CONTENT_DECRYPTOR_SERVICE = new Guid(0x68A72927, 0xFC7B, 0x44EE, 0x85, 0xF4, 0x7C, 0x51, 0xBD, 0x55, 0xA6, 0x59);

        public static readonly Guid MF_CONTENT_PROTECTION_DEVICE_SERVICE = new Guid(0xFF58436F, 0x76A0, 0x41FE, 0xB5, 0x66, 0x10, 0xCC, 0x53, 0x96, 0x2E, 0xDD);

        public static readonly Guid MF_SD_AUDIO_ENCODER_DELAY = new Guid(0x8E85422C, 0x73DE, 0x403F, 0x9A, 0x35, 0x55, 0x0A, 0xD6, 0xE8, 0xB9, 0x51);

        public static readonly Guid MF_SD_AUDIO_ENCODER_PADDING = new Guid(0x529C7F2C, 0xAC4B, 0x4E3F, 0xBF, 0xC3, 0x09, 0x02, 0x19, 0x49, 0x82, 0xCB);

        public static readonly Guid CLSID_MSH264DecoderMFT = new Guid(0x62CE7E72, 0x4C71, 0x4D20, 0xB1, 0x5D, 0x45, 0x28, 0x31, 0xA8, 0x7D, 0x9D);

        public static readonly Guid CLSID_MSH264EncoderMFT = new Guid(0x6CA50344, 0x051A, 0x4DED, 0x97, 0x79, 0xA4, 0x33, 0x05, 0x16, 0x5E, 0x35);

        public static readonly Guid CLSID_MSDDPlusDecMFT = new Guid(0x177C0AFE, 0x900B, 0x48D4, 0x9E, 0x4C, 0x57, 0xAD, 0xD2, 0x50, 0xB3, 0xD4);

        public static readonly Guid CLSID_MP3DecMediaObject = new Guid(0xBBEEA841, 0x0A63, 0x4F52, 0xA7, 0xAB, 0xA9, 0xB3, 0xA8, 0x4E, 0xD3, 0x8A);

        public static readonly Guid CLSID_MSAACDecMFT = new Guid(0x32D186A7, 0x218F, 0x4C75, 0x88, 0x76, 0xDD, 0x77, 0x27, 0x3A, 0x89, 0x99);

        public static readonly Guid CLSID_MSH265DecoderMFT = new Guid(0x420A51A3, 0xD605, 0x430C, 0xB4, 0xFC, 0x45, 0x27, 0x4F, 0xA6, 0xC5, 0x62);

        public static readonly Guid CLSID_WMVDecoderMFT = new Guid(0x82D353DF, 0x90BD, 0x4382, 0x8B, 0xC2, 0x3F, 0x61, 0x92, 0xB7, 0x6E, 0x34);

        public static readonly Guid CLSID_WMADecMediaObject = new Guid(0x2EEB4ADF, 0x4578, 0x4D10, 0xBC, 0xA7, 0xBB, 0x95, 0x5F, 0x56, 0x32, 0x0A);

        public static readonly Guid CLSID_MSMPEGAudDecMFT = new Guid(0x70707B39, 0xB2CA, 0x4015, 0xAB, 0xEA, 0xF8, 0x44, 0x7D, 0x22, 0xD8, 0x8B);

        public static readonly Guid CLSID_MSMPEGDecoderMFT = new Guid(0x2D709E52, 0x123F, 0x49B5, 0x9C, 0xBC, 0x9A, 0xF5, 0xCD, 0xE2, 0x8F, 0xB9);

        public static readonly Guid CLSID_AudioResamplerMediaObject = new Guid(0xF447B69E, 0x1884, 0x4A7E, 0x80, 0x55, 0x34, 0x6F, 0x74, 0xD6, 0xED, 0xB3);

        public static readonly Guid CLSID_MSVPxDecoder = new Guid(0xE3AAF548, 0xC9A4, 0x4C6E, 0x23, 0x4D, 0x5A, 0xDA, 0x37, 0x4B, 0x00, 0x00);

        public static readonly Guid CLSID_MSOpusDecoder = new Guid(0x63E17C10, 0x2D43, 0x4C42, 0x8F, 0xE3, 0x8D, 0x8B, 0x63, 0xE4, 0x6A, 0x6A);

        public static readonly Guid CLSID_VideoProcessorMFT = new Guid(0x88753B26, 0x5B24, 0x49BD, 0xB2, 0xE7, 0xC, 0x44, 0x5C, 0x78, 0xC9, 0x82);

        public static readonly Guid IID_IMFNetCrossOriginSupport = new Guid(0xBC2B7D44, 0xA72D, 0x49D5, 0x83, 0x76, 0x14, 0x80, 0xDE, 0xE5, 0x8B, 0x22);

        public static readonly Guid MFNETSOURCE_CROSS_ORIGIN_SUPPORT = new Guid(0x9842207C, 0xB02C, 0x4271, 0xA2, 0xFC, 0x72, 0xE4, 0x93, 0x8, 0xE5, 0xC2);

        public static readonly Guid IID_IMFHttpDownloadRequest = new Guid(0xF779FDDF, 0x26E7, 0x4270, 0x8A, 0x8B, 0xB9, 0x83, 0xD1, 0x85, 0x9D, 0xE0);

        public static readonly Guid IID_IMFHttpDownloadSession = new Guid(0x71FA9A2C, 0x53CE, 0x4662, 0xA1, 0x32, 0x1A, 0x7E, 0x8C, 0xBF, 0x62, 0xDB);

        public static readonly Guid IID_IMFHttpDownloadSessionProvider = new Guid(0x1B4CF4B9, 0x3A16, 0x4115, 0x83, 0x9D, 0x03, 0xCC, 0x5C, 0x99, 0xDF, 0x01);

        public static readonly Guid MFNETSOURCE_HTTP_DOWNLOAD_SESSION_PROVIDER = new Guid(0x7D55081E, 0x307D, 0x4D6D, 0xA6, 0x63, 0xA9, 0x3B, 0xE9, 0x7C, 0x4B, 0x5C);

        public static readonly Guid MF_SD_MEDIASOURCE_STATUS = new Guid(0x1913678B, 0xFC0F, 0x44DA, 0x8F, 0x43, 0x1B, 0xA3, 0xB5, 0x26, 0xF4, 0xAE);

        public static readonly Guid MF_SD_VIDEO_SPHERICAL = new Guid(0xA51DA449, 0x3FDC, 0x478C, 0xBC, 0xB5, 0x30, 0xBE, 0x76, 0x59, 0x5F, 0x55);

        public static readonly Guid MF_SD_VIDEO_SPHERICAL_FORMAT = new Guid(0x4A8FC407, 0x6EA1, 0x46C8, 0xB5, 0x67, 0x69, 0x71, 0xD4, 0xA1, 0x39, 0xC3);

        public static readonly Guid MF_SD_VIDEO_SPHERICAL_INITIAL_VIEWDIRECTION = new Guid(0x11D25A49, 0xBB62, 0x467F, 0x9D, 0xB1, 0xC1, 0x71, 0x65, 0x71, 0x6C, 0x49);

        public static readonly Guid MF_MEDIASOURCE_EXPOSE_ALL_STREAMS = new Guid(0xE7F250B8, 0x8FD9, 0x4A09, 0xB6, 0xC1, 0x6A, 0x31, 0x5C, 0x7C, 0x72, 0xE);

        public static readonly Guid IID_IMFMediaSource2 = new Guid(0xFBB03414, 0xD13B, 0x4786, 0x83, 0x19, 0x5A, 0xC5, 0x1F, 0xC0, 0xA1, 0x36);

        public static readonly Guid IID_IMFMediaStream2 = new Guid(0xC5BC37D6, 0x75C7, 0x46A1, 0xA1, 0x32, 0x81, 0xB5, 0xF7, 0x23, 0xC2, 0x0F);

        public static readonly Guid MF_ST_MEDIASOURCE_COLLECTION = new Guid(0x616DE972, 0x83AD, 0x4950, 0x81, 0x70, 0x63, 0x0D, 0x19, 0xCB, 0xE3, 0x07);

        public static readonly Guid MF_DEVICESTREAM_FILTER_KSCONTROL = new Guid(0x46783CCA, 0x3DF5, 0x4923, 0xA9, 0xEF, 0x36, 0xB7, 0x22, 0x3E, 0xDD, 0xE0);

        public static readonly Guid MF_DEVICESTREAM_PIN_KSCONTROL = new Guid(0xEF3EF9A7, 0x87F2, 0x48CA, 0xBE, 0x02, 0x67, 0x48, 0x78, 0x91, 0x8E, 0x98);

        public static readonly Guid MF_DEVICESTREAM_SOURCE_ATTRIBUTES = new Guid(0x2F8CB617, 0x361B, 0x434F, 0x85, 0xEA, 0x99, 0xA0, 0x3E, 0x1C, 0xE4, 0xE0);

        public static readonly Guid MF_DEVICESTREAM_FRAMESERVER_HIDDEN = new Guid(0xF402567B, 0x4D91, 0x4179, 0x96, 0xD1, 0x74, 0xC8, 0x48, 0x0C, 0x20, 0x34);

        public static readonly Guid MF_STF_VERSION_INFO = new Guid(0x6770BD39, 0xEF82, 0x44EE, 0xA4, 0x9B, 0x93, 0x4B, 0xEB, 0x24, 0xAE, 0xF7);

        public static readonly Guid MF_STF_VERSION_DATE = new Guid(0x31A165D5, 0xDF67, 0x4095, 0x8E, 0x44, 0x88, 0x68, 0xFC, 0x20, 0xDB, 0xFD);

        public static readonly Guid MF_DEVICESTREAM_REQUIRED_CAPABILITIES = new Guid(0x6D8B957E, 0x7CF6, 0x43F4, 0xAF, 0x56, 0x9C, 0x0E, 0x1E, 0x4F, 0xCB, 0xE1);

        public static readonly Guid MF_DEVICESTREAM_REQUIRED_SDDL = new Guid(0x331AE85D, 0xC0D3, 0x49BA, 0x83, 0xBA, 0x82, 0xA1, 0x2D, 0x63, 0xCD, 0xD6);

        public static readonly Guid MF_DEVICEMFT_SENSORPROFILE_COLLECTION = new Guid(0x36EBDC44, 0xB12C, 0x441B, 0x89, 0xF4, 0x08, 0xB2, 0xF4, 0x1A, 0x9C, 0xFC);

        public static readonly Guid MF_DEVICESTREAM_SENSORSTREAM_ID = new Guid(0xE35B9FE4, 0x0659, 0x4CAD, 0xBB, 0x51, 0x33, 0x16, 0x0B, 0xE7, 0xE4, 0x13);

        public static readonly Guid IID_IMFSensorDevice = new Guid(0xFB9F48F2, 0x2A18, 0x4E28, 0x97, 0x30, 0x78, 0x6F, 0x30, 0xF0, 0x4D, 0xC4);

        public static readonly Guid IID_IMFSensorGroup = new Guid(0x4110243A, 0x9757, 0x461F, 0x89, 0xF1, 0xF2, 0x23, 0x45, 0xBC, 0xAB, 0x4E);

        public static readonly Guid IID_IMFSensorStream = new Guid(0xE9A42171, 0xC56E, 0x498A, 0x8B, 0x39, 0xED, 0xA5, 0xA0, 0x70, 0xB7, 0xFC);

        public static readonly Guid IID_IMFSensorTransformFactory = new Guid(0xEED9C2EE, 0x66B4, 0x4F18, 0xA6, 0x97, 0xAC, 0x7D, 0x39, 0x60, 0x21, 0x5C);

        public static readonly Guid IID_IMFSensorProfile = new Guid(0x22F765D1, 0x8DAB, 0x4107, 0x84, 0x6D, 0x56, 0xBA, 0xF7, 0x22, 0x15, 0xE7);

        public static readonly Guid IID_IMFSensorProfileCollection = new Guid(0xC95EA55B, 0x0187, 0x48BE, 0x93, 0x53, 0x8D, 0x25, 0x07, 0x66, 0x23, 0x51);

        public static readonly Guid IID_IMFSensorProcessActivity = new Guid(0x39DC7F4A, 0xB141, 0x4719, 0x81, 0x3C, 0xA7, 0xF4, 0x61, 0x62, 0xA2, 0xB8);

        public static readonly Guid IID_IMFSensorActivityReport = new Guid(0x3E8C4BE1, 0xA8C2, 0x4528, 0x90, 0xDE, 0x28, 0x51, 0xBD, 0xE5, 0xFE, 0xAD);

        public static readonly Guid IID_IMFSensorActivitiesReport = new Guid(0x683F7A5E, 0x4A19, 0x43CD, 0xB1, 0xA9, 0xDB, 0xF4, 0xAB, 0x3F, 0x77, 0x77);

        public static readonly Guid IID_IMFSensorActivitiesReportCallback = new Guid(0xDE5072EE, 0xDBE3, 0x46DC, 0x8A, 0x87, 0xB6, 0xF6, 0x31, 0x19, 0x47, 0x51);

        public static readonly Guid IID_IMFSensorActivityMonitor = new Guid(0xD0CEF145, 0xB3F4, 0x4340, 0xA2, 0xE5, 0x7A, 0x50, 0x80, 0xCA, 0x05, 0xCB);

        public static readonly Guid IID_IMFExtendedCameraIntrinsicModel = new Guid(0x5C595E64, 0x4630, 0x4231, 0x85, 0x5A, 0x12, 0x84, 0x2F, 0x73, 0x32, 0x45);

        public static readonly Guid IID_IMFExtendedCameraIntrinsicsDistortionModel6KT = new Guid(0x74C2653B, 0x5F55, 0x4EB1, 0x9F, 0x0F, 0x18, 0xB8, 0xF6, 0x8B, 0x7D, 0x3D);

        public static readonly Guid IID_IMFExtendedCameraIntrinsicsDistortionModelArcTan = new Guid(0x812D5F95, 0xB572, 0x45DC, 0xBA, 0xFC, 0xAE, 0x24, 0x19, 0x9D, 0xDD, 0xA8);

        public static readonly Guid IID_IMFExtendedCameraIntrinsics = new Guid(0x687F6DAC, 0x6987, 0x4750, 0xA1, 0x6A, 0x73, 0x4D, 0x1E, 0x7A, 0x10, 0xFE);

        public static readonly Guid MFStreamExtension_ExtendedCameraIntrinsics = new Guid(0xAA74B3DF, 0x9A2C, 0x48D6, 0x83, 0x93, 0x5B, 0xD1, 0xC1, 0xA8, 0x1E, 0x6E);

        public static readonly Guid MFSampleExtension_ExtendedCameraIntrinsics = new Guid(0x560BC4A5, 0x4DE0, 0x4113, 0x9C, 0xDC, 0x83, 0x2D, 0xB9, 0x74, 0xF, 0x3D);

        public static readonly Guid IID_IMFExtendedCameraControl = new Guid(0x38E33520, 0xFCA1, 0x4845, 0xA2, 0x7A, 0x68, 0xB7, 0xC6, 0xAB, 0x37, 0x89);

        public static readonly Guid IID_IMFExtendedCameraController = new Guid(0xB91EBFEE, 0xCA03, 0x4AF4, 0x8A, 0x82, 0xA3, 0x17, 0x52, 0xF4, 0xA0, 0xFC);

        public static readonly Guid IID_IMFRelativePanelReport = new Guid(0xF25362EA, 0x2C0E, 0x447F, 0x81, 0xE2, 0x75, 0x59, 0x14, 0xCD, 0xC0, 0xC3);

        public static readonly Guid IID_IMFRelativePanelWatcher = new Guid(0x421AF7F6, 0x573E, 0x4AD0, 0x8F, 0xDA, 0x2E, 0x57, 0xCE, 0xDB, 0x18, 0xC6);

        public static readonly Guid IID_IMFVideoCaptureSampleAllocator = new Guid(0x725B77C7, 0xCA9F, 0x4FE5, 0x9D, 0x72, 0x99, 0x46, 0xBF, 0x9B, 0x3C, 0x70);

        public static readonly Guid IID_IMFSampleAllocatorControl = new Guid(0xDA62B958, 0x3A38, 0x4A97, 0xBD, 0x27, 0x14, 0x9C, 0x64, 0x0C, 0x07, 0x71);
    }
}
