// Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.

// Ported from um/mfidl.h in the Windows SDK for Windows 10.0.19041.0
// Original source is Copyright © Microsoft. All rights reserved.

using System;

namespace TerraFX.Interop
{
    public static unsafe partial class Windows
    {
        public const int MF_RESOLUTION_MEDIASOURCE = 0x1;

        public const int MF_RESOLUTION_BYTESTREAM = 0x2;

        public const int MF_RESOLUTION_CONTENT_DOES_NOT_HAVE_TO_MATCH_EXTENSION_OR_MIME_TYPE = 0x10;

        public const int MF_RESOLUTION_KEEP_BYTE_STREAM_ALIVE_ON_FAIL = 0x20;

        public const int MF_RESOLUTION_DISABLE_LOCAL_PLUGINS = 0x40;

        public const int MF_RESOLUTION_PLUGIN_CONTROL_POLICY_APPROVED_ONLY = 0x80;

        public const int MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY = 0x100;

        public const int MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY_EDGEMODE = 0x200;

        public const int MF_RESOLUTION_ENABLE_STORE_PLUGINS = 0x400;

        public const int MF_RESOLUTION_READ = 0x10000;

        public const int MF_RESOLUTION_WRITE = 0x20000;

        public const int MF_ACTIVATE_CUSTOM_MIXER_ALLOWFAIL = 0x1;

        public const int MF_ACTIVATE_CUSTOM_PRESENTER_ALLOWFAIL = 0x1;

        public static readonly Guid IID_IMFMediaSession = new Guid(0x90377834, 0x21D0, 0x4DEE, 0x82, 0x14, 0xBA, 0x2E, 0x3E, 0x6C, 0x11, 0x27);

        public static readonly Guid IID_IMFSourceResolver = new Guid(0xFBE5A32D, 0xA497, 0x4B61, 0xBB, 0x85, 0x97, 0xB1, 0xA8, 0x48, 0xA6, 0xE3);

        public static readonly Guid IID_IMFMediaSource = new Guid(0x279A808D, 0xAEC7, 0x40C8, 0x9C, 0x6B, 0xA6, 0xB4, 0x92, 0xC7, 0x8A, 0x66);

        public static readonly Guid IID_IMFMediaSourceEx = new Guid(0x3C9B2EB9, 0x86D5, 0x4514, 0xA3, 0x94, 0xF5, 0x66, 0x64, 0xF9, 0xF0, 0xD8);

        public static readonly Guid IID_IMFClockConsumer = new Guid(0x6EF2A662, 0x47C0, 0x4666, 0xB1, 0x3D, 0xCB, 0xB7, 0x17, 0xF2, 0xFA, 0x2C);

        public static readonly Guid IID_IMFMediaStream = new Guid(0xD182108F, 0x4EC6, 0x443F, 0xAA, 0x42, 0xA7, 0x11, 0x06, 0xEC, 0x82, 0x5F);

        public static readonly Guid IID_IMFMediaSink = new Guid(0x6EF2A660, 0x47C0, 0x4666, 0xB1, 0x3D, 0xCB, 0xB7, 0x17, 0xF2, 0xFA, 0x2C);

        public static readonly Guid IID_IMFStreamSink = new Guid(0x0A97B3CF, 0x8E7C, 0x4A3D, 0x8F, 0x8C, 0x0C, 0x84, 0x3D, 0xC2, 0x47, 0xFB);

        public static readonly Guid IID_IMFVideoSampleAllocator = new Guid(0x86CBC910, 0xE533, 0x4751, 0x8E, 0x3B, 0xF1, 0x9B, 0x5B, 0x80, 0x6A, 0x03);

        public static readonly Guid IID_IMFVideoSampleAllocatorNotify = new Guid(0xA792CDBE, 0xC374, 0x4E89, 0x83, 0x35, 0x27, 0x8E, 0x7B, 0x99, 0x56, 0xA4);

        public static readonly Guid IID_IMFVideoSampleAllocatorNotifyEx = new Guid(0x3978AA1A, 0x6D5B, 0x4B7F, 0xA3, 0x40, 0x90, 0x89, 0x91, 0x89, 0xAE, 0x34);

        public static readonly Guid IID_IMFVideoSampleAllocatorCallback = new Guid(0x992388B4, 0x3372, 0x4F67, 0x8B, 0x6F, 0xC8, 0x4C, 0x07, 0x1F, 0x47, 0x51);

        public static readonly Guid IID_IMFVideoSampleAllocatorEx = new Guid(0x545B3A48, 0x3283, 0x4F62, 0x86, 0x6F, 0xA6, 0x2D, 0x8F, 0x59, 0x8F, 0x9F);

        public static readonly Guid IID_IMFDXGIDeviceManagerSource = new Guid(0x20BC074B, 0x7A8D, 0x4609, 0x8C, 0x3B, 0x64, 0xA0, 0xA3, 0xB5, 0xD7, 0xCE);

        public static readonly Guid IID_IMFVideoProcessorControl = new Guid(0xA3F675D5, 0x6119, 0x4F7F, 0xA1, 0x00, 0x1D, 0x8B, 0x28, 0x0F, 0x0E, 0xFB);

        public static readonly Guid IID_IMFVideoProcessorControl2 = new Guid(0xBDE633D3, 0xE1DC, 0x4A7F, 0xA6, 0x93, 0xBB, 0xAE, 0x39, 0x9C, 0x4A, 0x20);

        public static readonly Guid IID_IMFVideoProcessorControl3 = new Guid(0x2424B3F2, 0xEB23, 0x40F1, 0x91, 0xAA, 0x74, 0xBD, 0xDE, 0xEA, 0x08, 0x83);

        public static readonly Guid IID_IMFVideoRendererEffectControl = new Guid(0x604D33D7, 0xCF23, 0x41D5, 0x82, 0x24, 0x5B, 0xBB, 0xB1, 0xA8, 0x74, 0x75);

        public static readonly Guid IID_IMFTopology = new Guid(0x83CF873A, 0xF6DA, 0x4BC8, 0x82, 0x3F, 0xBA, 0xCF, 0xD5, 0x5D, 0xC4, 0x33);

        public static readonly Guid IID_IMFTopologyNode = new Guid(0x83CF873A, 0xF6DA, 0x4BC8, 0x82, 0x3F, 0xBA, 0xCF, 0xD5, 0x5D, 0xC4, 0x30);

        public static readonly Guid IID_IMFGetService = new Guid(0xFA993888, 0x4383, 0x415A, 0xA9, 0x30, 0xDD, 0x47, 0x2A, 0x8C, 0xF6, 0xF7);

        public static readonly Guid IID_IMFClock = new Guid(0x2EB1E945, 0x18B8, 0x4139, 0x9B, 0x1A, 0xD5, 0xD5, 0x84, 0x81, 0x85, 0x30);

        public static readonly Guid IID_IMFPresentationClock = new Guid(0x868CE85C, 0x8EA9, 0x4F55, 0xAB, 0x82, 0xB0, 0x09, 0xA9, 0x10, 0xA8, 0x05);

        public static readonly Guid IID_IMFPresentationTimeSource = new Guid(0x7FF12CCE, 0xF76F, 0x41C2, 0x86, 0x3B, 0x16, 0x66, 0xC8, 0xE5, 0xE1, 0x39);

        public static readonly Guid IID_IMFClockStateSink = new Guid(0xF6696E82, 0x74F7, 0x4F3D, 0xA1, 0x78, 0x8A, 0x5E, 0x09, 0xC3, 0x65, 0x9F);

        public static readonly Guid IID_IMFPresentationDescriptor = new Guid(0x03CB2711, 0x24D7, 0x4DB6, 0xA1, 0x7F, 0xF3, 0xA7, 0xA4, 0x79, 0xA5, 0x36);

        public static readonly Guid IID_IMFStreamDescriptor = new Guid(0x56C03D9C, 0x9DBB, 0x45F5, 0xAB, 0x4B, 0xD8, 0x0F, 0x47, 0xC0, 0x59, 0x38);

        public static readonly Guid IID_IMFMediaTypeHandler = new Guid(0xE93DCF6C, 0x4B07, 0x4E1E, 0x81, 0x23, 0xAA, 0x16, 0xED, 0x6E, 0xAD, 0xF5);

        public static readonly Guid IID_IMFTimer = new Guid(0xE56E4CBD, 0x8F70, 0x49D8, 0xA0, 0xF8, 0xED, 0xB3, 0xD6, 0xAB, 0x9B, 0xF2);

        public static readonly Guid IID_IMFShutdown = new Guid(0x97EC2EA4, 0x0E42, 0x4937, 0x97, 0xAC, 0x9D, 0x6D, 0x32, 0x88, 0x24, 0xE1);

        public static readonly Guid IID_IMFTopoLoader = new Guid(0xDE9A6157, 0xF660, 0x4643, 0xB5, 0x6A, 0xDF, 0x9F, 0x79, 0x98, 0xC7, 0xCD);

        public static readonly Guid IID_IMFContentProtectionManager = new Guid(0xACF92459, 0x6A61, 0x42BD, 0xB5, 0x7C, 0xB4, 0x3E, 0x51, 0x20, 0x3C, 0xB0);

        public static readonly Guid IID_IMFContentEnabler = new Guid(0xD3C4EF59, 0x49CE, 0x4381, 0x90, 0x71, 0xD5, 0xBC, 0xD0, 0x44, 0xC7, 0x70);

        public static readonly Guid IID_IMFMetadata = new Guid(0xF88CFB8C, 0xEF16, 0x4991, 0xB4, 0x50, 0xCB, 0x8C, 0x69, 0xE5, 0x17, 0x04);

        public static readonly Guid IID_IMFMetadataProvider = new Guid(0x56181D2D, 0xE221, 0x4ADB, 0xB1, 0xC8, 0x3C, 0xEE, 0x6A, 0x53, 0xF7, 0x6F);

        public static readonly Guid IID_IMFRateSupport = new Guid(0x0A9CCDBC, 0xD797, 0x4563, 0x96, 0x67, 0x94, 0xEC, 0x5D, 0x79, 0x29, 0x2D);

        public static readonly Guid IID_IMFRateControl = new Guid(0x88DDCD21, 0x03C3, 0x4275, 0x91, 0xED, 0x55, 0xEE, 0x39, 0x29, 0x32, 0x8F);

        public static readonly Guid IID_IMFTimecodeTranslate = new Guid(0xAB9D8661, 0xF7E8, 0x4EF4, 0x98, 0x61, 0x89, 0xF3, 0x34, 0xF9, 0x4E, 0x74);

        public static readonly Guid IID_IMFSeekInfo = new Guid(0x26AFEA53, 0xD9ED, 0x42B5, 0xAB, 0x80, 0xE6, 0x4F, 0x9E, 0xE3, 0x47, 0x79);

        public static readonly Guid IID_IMFSimpleAudioVolume = new Guid(0x089EDF13, 0xCF71, 0x4338, 0x8D, 0x13, 0x9E, 0x56, 0x9D, 0xBD, 0xC3, 0x19);

        public static readonly Guid IID_IMFAudioStreamVolume = new Guid(0x76B1BBDB, 0x4EC8, 0x4F36, 0xB1, 0x06, 0x70, 0xA9, 0x31, 0x6D, 0xF5, 0x93);

        public static readonly Guid IID_IMFAudioPolicy = new Guid(0xA0638C2B, 0x6465, 0x4395, 0x9A, 0xE7, 0xA3, 0x21, 0xA9, 0xFD, 0x28, 0x56);

        public static readonly Guid IID_IMFSampleGrabberSinkCallback = new Guid(0x8C7B80BF, 0xEE42, 0x4B59, 0xB1, 0xDF, 0x55, 0x66, 0x8E, 0x1B, 0xDC, 0xA8);

        public static readonly Guid IID_IMFSampleGrabberSinkCallback2 = new Guid(0xCA86AA50, 0xC46E, 0x429E, 0xAB, 0x27, 0x16, 0xD6, 0xAC, 0x68, 0x44, 0xCB);

        public static readonly Guid IID_IMFWorkQueueServices = new Guid(0x35FE1BB8, 0xA3A9, 0x40FE, 0xBB, 0xEC, 0xEB, 0x56, 0x9C, 0x9C, 0xCC, 0xA3);

        public static readonly Guid IID_IMFWorkQueueServicesEx = new Guid(0x96BF961B, 0x40FE, 0x42F1, 0xBA, 0x9D, 0x32, 0x02, 0x38, 0xB4, 0x97, 0x00);

        public static readonly Guid IID_IMFQualityManager = new Guid(0x8D009D86, 0x5B9F, 0x4115, 0xB1, 0xFC, 0x9F, 0x80, 0xD5, 0x2A, 0xB8, 0xAB);

        public static readonly Guid IID_IMFQualityAdvise = new Guid(0xEC15E2E9, 0xE36B, 0x4F7C, 0x87, 0x58, 0x77, 0xD4, 0x52, 0xEF, 0x4C, 0xE7);

        public static readonly Guid IID_IMFQualityAdvise2 = new Guid(0xF3706F0D, 0x8EA2, 0x4886, 0x80, 0x00, 0x71, 0x55, 0xE9, 0xEC, 0x2E, 0xAE);

        public static readonly Guid IID_IMFQualityAdviseLimits = new Guid(0xDFCD8E4D, 0x30B5, 0x4567, 0xAC, 0xAA, 0x8E, 0xB5, 0xB7, 0x85, 0x3D, 0xC9);

        public static readonly Guid IID_IMFRealTimeClient = new Guid(0x2347D60B, 0x3FB5, 0x480C, 0x88, 0x03, 0x8D, 0xF3, 0xAD, 0xCD, 0x3E, 0xF0);

        public static readonly Guid IID_IMFRealTimeClientEx = new Guid(0x03910848, 0xAB16, 0x4611, 0xB1, 0x00, 0x17, 0xB8, 0x8A, 0xE2, 0xF2, 0x48);

        public static readonly Guid IID_IMFSequencerSource = new Guid(0x197CD219, 0x19CB, 0x4DE1, 0xA6, 0x4C, 0xAC, 0xF2, 0xED, 0xCB, 0xE5, 0x9E);

        public static readonly Guid IID_IMFMediaSourceTopologyProvider = new Guid(0x0E1D6009, 0xC9F3, 0x442D, 0x8C, 0x51, 0xA4, 0x2D, 0x2D, 0x49, 0x45, 0x2F);

        public static readonly Guid IID_IMFMediaSourcePresentationProvider = new Guid(0x0E1D600A, 0xC9F3, 0x442D, 0x8C, 0x51, 0xA4, 0x2D, 0x2D, 0x49, 0x45, 0x2F);

        public static readonly Guid IID_IMFTopologyNodeAttributeEditor = new Guid(0x676AA6DD, 0x238A, 0x410D, 0xBB, 0x99, 0x65, 0x66, 0x8D, 0x01, 0x60, 0x5A);

        public static readonly Guid IID_IMFByteStreamBuffering = new Guid(0x6D66D782, 0x1D4F, 0x4DB7, 0x8C, 0x63, 0xCB, 0x8C, 0x77, 0xF1, 0xEF, 0x5E);

        public static readonly Guid IID_IMFByteStreamCacheControl = new Guid(0xF5042EA4, 0x7A96, 0x4A75, 0xAA, 0x7B, 0x2B, 0xE1, 0xEF, 0x7F, 0x88, 0xD5);

        public static readonly Guid IID_IMFByteStreamTimeSeek = new Guid(0x64976BFA, 0xFB61, 0x4041, 0x90, 0x69, 0x8C, 0x9A, 0x5F, 0x65, 0x9B, 0xEB);

        public static readonly Guid IID_IMFByteStreamCacheControl2 = new Guid(0x71CE469C, 0xF34B, 0x49EA, 0xA5, 0x6B, 0x2D, 0x2A, 0x10, 0xE5, 0x11, 0x49);

        public static readonly Guid IID_IMFNetCredential = new Guid(0x5B87EF6A, 0x7ED8, 0x434F, 0xBA, 0x0E, 0x18, 0x4F, 0xAC, 0x16, 0x28, 0xD1);

        public static readonly Guid IID_IMFNetCredentialManager = new Guid(0x5B87EF6B, 0x7ED8, 0x434F, 0xBA, 0x0E, 0x18, 0x4F, 0xAC, 0x16, 0x28, 0xD1);

        public static readonly Guid IID_IMFNetCredentialCache = new Guid(0x5B87EF6C, 0x7ED8, 0x434F, 0xBA, 0x0E, 0x18, 0x4F, 0xAC, 0x16, 0x28, 0xD1);

        public static readonly Guid IID_IMFSSLCertificateManager = new Guid(0x61F7D887, 0x1230, 0x4A8B, 0xAE, 0xBA, 0x8A, 0xD4, 0x34, 0xD1, 0xA6, 0x4D);

        public static readonly Guid IID_IMFNetResourceFilter = new Guid(0x091878A3, 0xBF11, 0x4A5C, 0xBC, 0x9F, 0x33, 0x99, 0x5B, 0x06, 0xEF, 0x2D);

        public static readonly Guid IID_IMFSourceOpenMonitor = new Guid(0x059054B3, 0x027C, 0x494C, 0xA2, 0x7D, 0x91, 0x13, 0x29, 0x1C, 0xF8, 0x7F);

        public static readonly Guid IID_IMFNetProxyLocator = new Guid(0xE9CD0383, 0xA268, 0x4BB4, 0x82, 0xDE, 0x65, 0x8D, 0x53, 0x57, 0x4D, 0x41);

        public static readonly Guid IID_IMFNetProxyLocatorFactory = new Guid(0xE9CD0384, 0xA268, 0x4BB4, 0x82, 0xDE, 0x65, 0x8D, 0x53, 0x57, 0x4D, 0x41);

        public static readonly Guid IID_IMFSaveJob = new Guid(0xE9931663, 0x80BF, 0x4C6E, 0x98, 0xAF, 0x5D, 0xCF, 0x58, 0x74, 0x7D, 0x1F);

        public static readonly Guid IID_IMFNetSchemeHandlerConfig = new Guid(0x7BE19E73, 0xC9BF, 0x468A, 0xAC, 0x5A, 0xA5, 0xE8, 0x65, 0x3B, 0xEC, 0x87);

        public static readonly Guid IID_IMFSchemeHandler = new Guid(0x6D4C7B74, 0x52A0, 0x4BB7, 0xB0, 0xDB, 0x55, 0xF2, 0x9F, 0x47, 0xA6, 0x68);

        public static readonly Guid IID_IMFByteStreamHandler = new Guid(0xBB420AA4, 0x765B, 0x4A1F, 0x91, 0xFE, 0xD6, 0xA8, 0xA1, 0x43, 0x92, 0x4C);

        public static readonly Guid IID_IMFTrustedInput = new Guid(0x542612C4, 0xA1B8, 0x4632, 0xB5, 0x21, 0xDE, 0x11, 0xEA, 0x64, 0xA0, 0xB0);

        public static readonly Guid IID_IMFInputTrustAuthority = new Guid(0xD19F8E98, 0xB126, 0x4446, 0x89, 0x0C, 0x5D, 0xCB, 0x7A, 0xD7, 0x14, 0x53);

        public static readonly Guid IID_IMFTrustedOutput = new Guid(0xD19F8E95, 0xB126, 0x4446, 0x89, 0x0C, 0x5D, 0xCB, 0x7A, 0xD7, 0x14, 0x53);

        public static readonly Guid IID_IMFOutputTrustAuthority = new Guid(0xD19F8E94, 0xB126, 0x4446, 0x89, 0x0C, 0x5D, 0xCB, 0x7A, 0xD7, 0x14, 0x53);

        public static readonly Guid IID_IMFOutputPolicy = new Guid(0x7F00F10A, 0xDAED, 0x41AF, 0xAB, 0x26, 0x5F, 0xDF, 0xA4, 0xDF, 0xBA, 0x3C);

        public static readonly Guid MFCONNECTOR_PCI_EXPRESS = new Guid(0xAC3AEF5F, 0xCE43, 0x11D9, 0x92, 0xDB, 0x00, 0x0B, 0xDB, 0x28, 0xFF, 0x98);

        public static readonly Guid IID_IMFOutputSchema = new Guid(0x7BE0FC5B, 0xABD9, 0x44FB, 0xA5, 0xC8, 0xF5, 0x01, 0x36, 0xE7, 0x15, 0x99);

        public static readonly Guid IID_IMFSecureChannel = new Guid(0xD0AE555D, 0x3B12, 0x4D97, 0xB0, 0x60, 0x09, 0x90, 0xBC, 0x5A, 0xEB, 0x67);

        public static readonly Guid IID_IMFSampleProtection = new Guid(0x8E36395F, 0xC7B9, 0x43C4, 0xA5, 0x4D, 0x51, 0x2B, 0x4A, 0xF6, 0x3C, 0x95);

        public static readonly Guid IID_IMFMediaSinkPreroll = new Guid(0x5DFD4B2A, 0x7674, 0x4110, 0xA4, 0xE6, 0x8A, 0x68, 0xFD, 0x5F, 0x36, 0x88);

        public static readonly Guid IID_IMFFinalizableMediaSink = new Guid(0xEAECB74A, 0x9A50, 0x42CE, 0x95, 0x41, 0x6A, 0x7F, 0x57, 0xAA, 0x4A, 0xD7);

        public static readonly Guid IID_IMFStreamingSinkConfig = new Guid(0x9DB7AA41, 0x3CC5, 0x40D4, 0x85, 0x09, 0x55, 0x58, 0x04, 0xAD, 0x34, 0xCC);

        public static readonly Guid IID_IMFRemoteProxy = new Guid(0x994E23AD, 0x1CC2, 0x493C, 0xB9, 0xFA, 0x46, 0xF1, 0xCB, 0x04, 0x0F, 0xA4);

        public static readonly Guid IID_IMFObjectReferenceStream = new Guid(0x09EF5BE3, 0xC8A7, 0x469E, 0x8B, 0x70, 0x73, 0xBF, 0x25, 0xBB, 0x19, 0x3F);

        public static readonly Guid IID_IMFPMPHost = new Guid(0xF70CA1A9, 0xFDC7, 0x4782, 0xB9, 0x94, 0xAD, 0xFF, 0xB1, 0xC9, 0x86, 0x06);

        public static readonly Guid IID_IMFPMPClient = new Guid(0x6C4E655D, 0xEAD8, 0x4421, 0xB6, 0xB9, 0x54, 0xDC, 0xDB, 0xBD, 0xF8, 0x20);

        public static readonly Guid IID_IMFPMPServer = new Guid(0x994E23AF, 0x1CC2, 0x493C, 0xB9, 0xFA, 0x46, 0xF1, 0xCB, 0x04, 0x0F, 0xA4);

        public static readonly Guid IID_IMFRemoteDesktopPlugin = new Guid(0x1CDE6309, 0xCAE0, 0x4940, 0x90, 0x7E, 0xC1, 0xEC, 0x9C, 0x3D, 0x1D, 0x4A);

        public static readonly Guid IID_IMFSAMIStyle = new Guid(0xA7E025DD, 0x5303, 0x4A62, 0x89, 0xD6, 0xE7, 0x47, 0xE1, 0xEF, 0xAC, 0x73);

        public static readonly Guid IID_IMFTranscodeProfile = new Guid(0x4ADFDBA3, 0x7AB0, 0x4953, 0xA6, 0x2B, 0x46, 0x1E, 0x7F, 0xF3, 0xDA, 0x1E);

        public static readonly Guid IID_IMFTranscodeSinkInfoProvider = new Guid(0x8CFFCD2E, 0x5A03, 0x4A3A, 0xAF, 0xF7, 0xED, 0xCD, 0x10, 0x7C, 0x62, 0x0E);

        public static readonly Guid IID_IMFFieldOfUseMFTUnlock = new Guid(0x508E71D3, 0xEC66, 0x4FC3, 0x87, 0x75, 0xB4, 0xB9, 0xED, 0x6B, 0xA8, 0x47);

        public static readonly Guid IID_IMFLocalMFTRegistration = new Guid(0x149C4D73, 0xB4BE, 0x4F8D, 0x8B, 0x87, 0x07, 0x9E, 0x92, 0x6B, 0x6A, 0xDD);

        public static readonly Guid IID_IMFCapturePhotoConfirmation = new Guid(0x19F68549, 0xCA8A, 0x4706, 0xA4, 0xEF, 0x48, 0x1D, 0xBC, 0x95, 0xE1, 0x2C);

        public static readonly Guid IID_IMFPMPHostApp = new Guid(0x84D2054A, 0x3AA1, 0x4728, 0xA3, 0xB0, 0x44, 0x0A, 0x41, 0x8C, 0xF4, 0x9C);

        public static readonly Guid IID_IMFPMPClientApp = new Guid(0xC004F646, 0xBE2C, 0x48F3, 0x93, 0xA2, 0xA0, 0x98, 0x3E, 0xBA, 0x11, 0x08);

        public static readonly Guid IID_IMFMediaStreamSourceSampleRequest = new Guid(0x380B9AF9, 0xA85B, 0x4E78, 0xA2, 0xAF, 0xEA, 0x5C, 0xE6, 0x45, 0xC6, 0xB4);

        public static readonly Guid IID_IMFTrackedSample = new Guid(0x245BF8E9, 0x0755, 0x40F7, 0x88, 0xA5, 0xAE, 0x0F, 0x18, 0xD5, 0x5E, 0x17);

        public static readonly Guid IID_IMFProtectedEnvironmentAccess = new Guid(0xEF5DC845, 0xF0D9, 0x4EC9, 0xB0, 0x0C, 0xCB, 0x51, 0x83, 0xD3, 0x84, 0x34);

        public static readonly Guid IID_IMFSignedLibrary = new Guid(0x4A724BCA, 0xFF6A, 0x4C07, 0x8E, 0x0D, 0x7A, 0x35, 0x84, 0x21, 0xCF, 0x06);

        public static readonly Guid IID_IMFSystemId = new Guid(0xFFF4AF3A, 0x1FC1, 0x4EF9, 0xA2, 0x9B, 0xD2, 0x6C, 0x49, 0xE2, 0xF3, 0x1A);

        public static readonly Guid IID_IMFContentProtectionDevice = new Guid(0xE6257174, 0xA060, 0x4C9A, 0xA0, 0x88, 0x3B, 0x1B, 0x47, 0x1C, 0xAD, 0x28);

        public static readonly Guid IID_IMFContentDecryptorContext = new Guid(0x7EC4B1BD, 0x43FB, 0x4763, 0x85, 0xD2, 0x64, 0xFC, 0xB5, 0xC5, 0xF4, 0xCB);

        public static readonly Guid IID_IMFNetCrossOriginSupport = new Guid(0xBC2B7D44, 0xA72D, 0x49D5, 0x83, 0x76, 0x14, 0x80, 0xDE, 0xE5, 0x8B, 0x22);

        public static readonly Guid IID_IMFHttpDownloadRequest = new Guid(0xF779FDDF, 0x26E7, 0x4270, 0x8A, 0x8B, 0xB9, 0x83, 0xD1, 0x85, 0x9D, 0xE0);

        public static readonly Guid IID_IMFHttpDownloadSession = new Guid(0x71FA9A2C, 0x53CE, 0x4662, 0xA1, 0x32, 0x1A, 0x7E, 0x8C, 0xBF, 0x62, 0xDB);

        public static readonly Guid IID_IMFHttpDownloadSessionProvider = new Guid(0x1B4CF4B9, 0x3A16, 0x4115, 0x83, 0x9D, 0x03, 0xCC, 0x5C, 0x99, 0xDF, 0x01);

        public static readonly Guid IID_IMFMediaSource2 = new Guid(0xFBB03414, 0xD13B, 0x4786, 0x83, 0x19, 0x5A, 0xC5, 0x1F, 0xC0, 0xA1, 0x36);

        public static readonly Guid IID_IMFMediaStream2 = new Guid(0xC5BC37D6, 0x75C7, 0x46A1, 0xA1, 0x32, 0x81, 0xB5, 0xF7, 0x23, 0xC2, 0x0F);

        public static readonly Guid IID_IMFSensorDevice = new Guid(0xFB9F48F2, 0x2A18, 0x4E28, 0x97, 0x30, 0x78, 0x6F, 0x30, 0xF0, 0x4D, 0xC4);

        public static readonly Guid IID_IMFSensorGroup = new Guid(0x4110243A, 0x9757, 0x461F, 0x89, 0xF1, 0xF2, 0x23, 0x45, 0xBC, 0xAB, 0x4E);

        public static readonly Guid IID_IMFSensorStream = new Guid(0xE9A42171, 0xC56E, 0x498A, 0x8B, 0x39, 0xED, 0xA5, 0xA0, 0x70, 0xB7, 0xFC);

        public static readonly Guid IID_IMFSensorTransformFactory = new Guid(0xEED9C2EE, 0x66B4, 0x4F18, 0xA6, 0x97, 0xAC, 0x7D, 0x39, 0x60, 0x21, 0x5C);

        public static readonly Guid IID_IMFSensorProfile = new Guid(0x22F765D1, 0x8DAB, 0x4107, 0x84, 0x6D, 0x56, 0xBA, 0xF7, 0x22, 0x15, 0xE7);

        public static readonly Guid IID_IMFSensorProfileCollection = new Guid(0xC95EA55B, 0x0187, 0x48BE, 0x93, 0x53, 0x8D, 0x25, 0x07, 0x66, 0x23, 0x51);

        public static readonly Guid IID_IMFSensorProcessActivity = new Guid(0x39DC7F4A, 0xB141, 0x4719, 0x81, 0x3C, 0xA7, 0xF4, 0x61, 0x62, 0xA2, 0xB8);

        public static readonly Guid IID_IMFSensorActivityReport = new Guid(0x3E8C4BE1, 0xA8C2, 0x4528, 0x90, 0xDE, 0x28, 0x51, 0xBD, 0xE5, 0xFE, 0xAD);

        public static readonly Guid IID_IMFSensorActivitiesReport = new Guid(0x683F7A5E, 0x4A19, 0x43CD, 0xB1, 0xA9, 0xDB, 0xF4, 0xAB, 0x3F, 0x77, 0x77);

        public static readonly Guid IID_IMFSensorActivitiesReportCallback = new Guid(0xDE5072EE, 0xDBE3, 0x46DC, 0x8A, 0x87, 0xB6, 0xF6, 0x31, 0x19, 0x47, 0x51);

        public static readonly Guid IID_IMFSensorActivityMonitor = new Guid(0xD0CEF145, 0xB3F4, 0x4340, 0xA2, 0xE5, 0x7A, 0x50, 0x80, 0xCA, 0x05, 0xCB);

        public static readonly Guid IID_IMFExtendedCameraIntrinsicModel = new Guid(0x5C595E64, 0x4630, 0x4231, 0x85, 0x5A, 0x12, 0x84, 0x2F, 0x73, 0x32, 0x45);

        public static readonly Guid IID_IMFExtendedCameraIntrinsicsDistortionModel6KT = new Guid(0x74C2653B, 0x5F55, 0x4EB1, 0x9F, 0x0F, 0x18, 0xB8, 0xF6, 0x8B, 0x7D, 0x3D);

        public static readonly Guid IID_IMFExtendedCameraIntrinsicsDistortionModelArcTan = new Guid(0x812D5F95, 0xB572, 0x45DC, 0xBA, 0xFC, 0xAE, 0x24, 0x19, 0x9D, 0xDD, 0xA8);

        public static readonly Guid IID_IMFExtendedCameraIntrinsics = new Guid(0x687F6DAC, 0x6987, 0x4750, 0xA1, 0x6A, 0x73, 0x4D, 0x1E, 0x7A, 0x10, 0xFE);

        public static readonly Guid IID_IMFExtendedCameraControl = new Guid(0x38E33520, 0xFCA1, 0x4845, 0xA2, 0x7A, 0x68, 0xB7, 0xC6, 0xAB, 0x37, 0x89);

        public static readonly Guid IID_IMFExtendedCameraController = new Guid(0xB91EBFEE, 0xCA03, 0x4AF4, 0x8A, 0x82, 0xA3, 0x17, 0x52, 0xF4, 0xA0, 0xFC);

        public static readonly Guid IID_IMFRelativePanelReport = new Guid(0xF25362EA, 0x2C0E, 0x447F, 0x81, 0xE2, 0x75, 0x59, 0x14, 0xCD, 0xC0, 0xC3);

        public static readonly Guid IID_IMFRelativePanelWatcher = new Guid(0x421AF7F6, 0x573E, 0x4AD0, 0x8F, 0xDA, 0x2E, 0x57, 0xCE, 0xDB, 0x18, 0xC6);

        public static readonly Guid IID_IMFVideoCaptureSampleAllocator = new Guid(0x725B77C7, 0xCA9F, 0x4FE5, 0x9D, 0x72, 0x99, 0x46, 0xBF, 0x9B, 0x3C, 0x70);

        public static readonly Guid IID_IMFSampleAllocatorControl = new Guid(0xDA62B958, 0x3A38, 0x4A97, 0xBD, 0x27, 0x14, 0x9C, 0x64, 0x0C, 0x07, 0x71);
    }
}
